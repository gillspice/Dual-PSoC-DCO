ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SIGNCHANGE_PositiveInterrupt_Handler,"ax",%progbits
  19              		.align	2
  20              		.global	SIGNCHANGE_PositiveInterrupt_Handler
  21              		.thumb
  22              		.thumb_func
  23              		.type	SIGNCHANGE_PositiveInterrupt_Handler, %function
  24              	SIGNCHANGE_PositiveInterrupt_Handler:
  25              	.LFB63:
  26              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** */
  12:.\main.c      **** #include <project.h>
  13:.\main.c      **** #include <math.h>
  14:.\main.c      **** #include <stdlib.h>
  15:.\main.c      **** 
  16:.\main.c      **** #define CAP_VALUE 0.027
  17:.\main.c      **** #define VPP_VALUE 2.5
  18:.\main.c      **** 
  19:.\main.c      **** int dac_value;
  20:.\main.c      **** uint32_t count;
  21:.\main.c      **** uint32_t oldCount;
  22:.\main.c      **** 
  23:.\main.c      **** CY_ISR_PROTO(SIGNCHANGE_PositiveInterrupt_Handler);
  24:.\main.c      **** CY_ISR(SIGNCHANGE_PositiveInterrupt_Handler)
  25:.\main.c      **** {
  27              		.loc 1 25 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 2


  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  26:.\main.c      ****     #ifdef OSC1_SIGNCHANGE_ISR1_INTERRUPT_INTERRUPT_CALLBACK
  27:.\main.c      ****         OSC1_SIGNCHANGE_ISR1_Interrupt_InterruptCallback();
  28:.\main.c      ****     #endif /* OSC1_SIGNCHANGE_ISR1_INTERRUPT_INTERRUPT_CALLBACK */ 
  29:.\main.c      **** 
  30:.\main.c      ****     /*  Place your Interrupt code here. */
  31:.\main.c      ****     /* `#START OSC1_SIGNCHANGE_ISR1_Interrupt` */
  32:.\main.c      ****     OSC1_Freq_Timer_Stop();
  35              		.loc 1 32 0
  36 0002 FFF7FEFF 		bl	OSC1_Freq_Timer_Stop
  37              	.LVL0:
  33:.\main.c      ****     OSC1_Freq_Timer_WriteCounter(count-OSC1_Freq_Timer_ReadCounter());
  38              		.loc 1 33 0
  39 0006 054B     		ldr	r3, .L3
  40 0008 1C68     		ldr	r4, [r3]
  41 000a FFF7FEFF 		bl	OSC1_Freq_Timer_ReadCounter
  42              	.LVL1:
  43 000e 201A     		subs	r0, r4, r0
  44 0010 FFF7FEFF 		bl	OSC1_Freq_Timer_WriteCounter
  45              	.LVL2:
  34:.\main.c      ****    OSC1_Freq_Timer_Start();
  46              		.loc 1 34 0
  47 0014 FFF7FEFF 		bl	OSC1_Freq_Timer_Start
  48              	.LVL3:
  49 0018 10BD     		pop	{r4, pc}
  50              	.L4:
  51 001a 00BF     		.align	2
  52              	.L3:
  53 001c 00000000 		.word	count
  54              		.cfi_endproc
  55              	.LFE63:
  56              		.size	SIGNCHANGE_PositiveInterrupt_Handler, .-SIGNCHANGE_PositiveInterrupt_Handler
  57              		.section	.text.SIGNCHANGE_NegativeInterrupt_Handler,"ax",%progbits
  58              		.align	2
  59              		.global	SIGNCHANGE_NegativeInterrupt_Handler
  60              		.thumb
  61              		.thumb_func
  62              		.type	SIGNCHANGE_NegativeInterrupt_Handler, %function
  63              	SIGNCHANGE_NegativeInterrupt_Handler:
  64              	.LFB64:
  35:.\main.c      ****     /* `#END` */
  36:.\main.c      **** }
  37:.\main.c      **** 
  38:.\main.c      **** CY_ISR_PROTO(SIGNCHANGE_NegativeInterrupt_Handler);
  39:.\main.c      **** CY_ISR(SIGNCHANGE_NegativeInterrupt_Handler)
  40:.\main.c      **** {
  65              		.loc 1 40 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
  41:.\main.c      ****     #ifdef OSC1_SIGNCHANGE_ISR2_INTERRUPT_INTERRUPT_CALLBACK
  42:.\main.c      ****         OSC1_SIGNCHANGE_ISR2_Interrupt_InterruptCallback();
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 3


  43:.\main.c      ****     #endif /* OSC1_SIGNCHANGE_ISR2_INTERRUPT_INTERRUPT_CALLBACK */ 
  44:.\main.c      **** 
  45:.\main.c      ****     /*  Place your Interrupt code here. */
  46:.\main.c      ****     /* `#START OSC1_SIGNCHANGE_ISR2_Interrupt` */
  47:.\main.c      ****     
  48:.\main.c      ****     OSC1_Freq_Timer_Stop();
  73              		.loc 1 48 0
  74 0002 FFF7FEFF 		bl	OSC1_Freq_Timer_Stop
  75              	.LVL4:
  49:.\main.c      **** 
  50:.\main.c      ****     OSC1_Freq_Timer_WriteCounter(count-OSC1_Freq_Timer_ReadCounter());
  76              		.loc 1 50 0
  77 0006 054B     		ldr	r3, .L7
  78 0008 1C68     		ldr	r4, [r3]
  79 000a FFF7FEFF 		bl	OSC1_Freq_Timer_ReadCounter
  80              	.LVL5:
  81 000e 201A     		subs	r0, r4, r0
  82 0010 FFF7FEFF 		bl	OSC1_Freq_Timer_WriteCounter
  83              	.LVL6:
  51:.\main.c      **** 
  52:.\main.c      ****    OSC1_Freq_Timer_Start();
  84              		.loc 1 52 0
  85 0014 FFF7FEFF 		bl	OSC1_Freq_Timer_Start
  86              	.LVL7:
  87 0018 10BD     		pop	{r4, pc}
  88              	.L8:
  89 001a 00BF     		.align	2
  90              	.L7:
  91 001c 00000000 		.word	count
  92              		.cfi_endproc
  93              	.LFE64:
  94              		.size	SIGNCHANGE_NegativeInterrupt_Handler, .-SIGNCHANGE_NegativeInterrupt_Handler
  95              		.global	__aeabi_fadd
  96              		.global	__aeabi_fdiv
  97              		.global	__aeabi_fmul
  98              		.global	__aeabi_f2d
  99              		.global	__aeabi_i2d
 100              		.global	__aeabi_dmul
 101              		.global	__aeabi_ddiv
 102              		.global	__aeabi_d2uiz
 103              		.section	.text.main,"ax",%progbits
 104              		.align	2
 105              		.global	main
 106              		.thumb
 107              		.thumb_func
 108              		.type	main, %function
 109              	main:
 110              	.LFB65:
  53:.\main.c      **** /* `#END` */
  54:.\main.c      **** }
  55:.\main.c      **** 
  56:.\main.c      **** 
  57:.\main.c      **** int main()
  58:.\main.c      **** {
 111              		.loc 1 58 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 4


 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 2DE97043 		push	{r4, r5, r6, r8, r9, lr}
 116              		.cfi_def_cfa_offset 24
 117              		.cfi_offset 4, -24
 118              		.cfi_offset 5, -20
 119              		.cfi_offset 6, -16
 120              		.cfi_offset 8, -12
 121              		.cfi_offset 9, -8
 122              		.cfi_offset 14, -4
 123 0004 82B0     		sub	sp, sp, #8
 124              		.cfi_def_cfa_offset 32
 125              	.LVL8:
  59:.\main.c      ****     int pinState = 0;
  60:.\main.c      ****     CyGlobalIntEnable; /* Enable global interrupts. */
 126              		.loc 1 60 0
 127              	@ 60 ".\main.c" 1
 128 0006 62B6     		CPSIE   i
 129              	@ 0 "" 2
  61:.\main.c      ****     volatile int myFixedValue = 1;
 130              		.loc 1 61 0
 131              		.thumb
 132 0008 0123     		movs	r3, #1
 133 000a 0193     		str	r3, [sp, #4]
  62:.\main.c      ****   int32_t newReg;
  63:.\main.c      ****   int32_t deltaCount;
  64:.\main.c      **** 
  65:.\main.c      ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  66:.\main.c      ****     OSC1_Freq_Timer_Start();
 134              		.loc 1 66 0
 135 000c FFF7FEFF 		bl	OSC1_Freq_Timer_Start
 136              	.LVL9:
  67:.\main.c      **** //    OSC1_Freq_Timer_1_Start();
  68:.\main.c      ****     OSC1_IDAC8_Start();
 137              		.loc 1 68 0
 138 0010 FFF7FEFF 		bl	OSC1_IDAC8_Start
 139              	.LVL10:
  69:.\main.c      ****     Clock_1_Start();
 140              		.loc 1 69 0
 141 0014 FFF7FEFF 		bl	Clock_1_Start
 142              	.LVL11:
  70:.\main.c      ****     OSC1_IDAC8_SetValue(255);
 143              		.loc 1 70 0
 144 0018 FF20     		movs	r0, #255
 145 001a FFF7FEFF 		bl	OSC1_IDAC8_SetValue
 146              	.LVL12:
  71:.\main.c      ****     OSC1_IDAC8_SAW_Start();
 147              		.loc 1 71 0
 148 001e FFF7FEFF 		bl	OSC1_IDAC8_SAW_Start
 149              	.LVL13:
  72:.\main.c      ****     OSC1_IDAC8_SAW_SetValue(255);
 150              		.loc 1 72 0
 151 0022 FF20     		movs	r0, #255
 152 0024 FFF7FEFF 		bl	OSC1_IDAC8_SAW_SetValue
 153              	.LVL14:
  73:.\main.c      ****     ADC_DelSig_1_Start();
 154              		.loc 1 73 0
 155 0028 FFF7FEFF 		bl	ADC_DelSig_1_Start
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 5


 156              	.LVL15:
  74:.\main.c      ****     ADC_DelSig_1_StartConvert();
 157              		.loc 1 74 0
 158 002c FFF7FEFF 		bl	ADC_DelSig_1_StartConvert
 159              	.LVL16:
  75:.\main.c      ****     OSC1_Freq_Timer_WritePeriod(36000);
 160              		.loc 1 75 0
 161 0030 48F6A040 		movw	r0, #36000
 162 0034 FFF7FEFF 		bl	OSC1_Freq_Timer_WritePeriod
 163              	.LVL17:
  76:.\main.c      **** //    OSC1_Freq_Timer_1_WritePeriod(36000);
  77:.\main.c      ****     OSC1_Triangle_Follower_Start();
 164              		.loc 1 77 0
 165 0038 FFF7FEFF 		bl	OSC1_Triangle_Follower_Start
 166              	.LVL18:
  78:.\main.c      ****     OSC1_Triangle_Follower_Enable();
 167              		.loc 1 78 0
 168 003c FFF7FEFF 		bl	OSC1_Triangle_Follower_Enable
 169              	.LVL19:
  79:.\main.c      ****     OSC1_Saw_Follower_Start();
 170              		.loc 1 79 0
 171 0040 FFF7FEFF 		bl	OSC1_Saw_Follower_Start
 172              	.LVL20:
  80:.\main.c      ****     OSC1_Saw_Follower_Enable();
 173              		.loc 1 80 0
 174 0044 FFF7FEFF 		bl	OSC1_Saw_Follower_Enable
 175              	.LVL21:
  81:.\main.c      ****     OSC1_Comp_Start();
 176              		.loc 1 81 0
 177 0048 FFF7FEFF 		bl	OSC1_Comp_Start
 178              	.LVL22:
  82:.\main.c      ****     OSC1_Comp_Enable();
 179              		.loc 1 82 0
 180 004c FFF7FEFF 		bl	OSC1_Comp_Enable
 181              	.LVL23:
  83:.\main.c      ****     Comp_1_Start();
 182              		.loc 1 83 0
 183 0050 FFF7FEFF 		bl	Comp_1_Start
 184              	.LVL24:
  84:.\main.c      ****     Comp_1_Enable();
 185              		.loc 1 84 0
 186 0054 FFF7FEFF 		bl	Comp_1_Enable
 187              	.LVL25:
  85:.\main.c      ****     OSC1_ADC_SAR_Start();
 188              		.loc 1 85 0
 189 0058 FFF7FEFF 		bl	OSC1_ADC_SAR_Start
 190              	.LVL26:
  86:.\main.c      ****     OSC1_ADC_SAR_StartConvert();
 191              		.loc 1 86 0
 192 005c FFF7FEFF 		bl	OSC1_ADC_SAR_StartConvert
 193              	.LVL27:
  87:.\main.c      ****     OSC1_SIGNCHANGE_PositiveISR_StartEx(SIGNCHANGE_PositiveInterrupt_Handler);
 194              		.loc 1 87 0
 195 0060 6748     		ldr	r0, .L24+16
 196 0062 FFF7FEFF 		bl	OSC1_SIGNCHANGE_PositiveISR_StartEx
 197              	.LVL28:
  88:.\main.c      ****     OSC1_SIGNCHANGE_NegativeISR_StartEx(SIGNCHANGE_NegativeInterrupt_Handler);
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 6


 198              		.loc 1 88 0
 199 0066 6748     		ldr	r0, .L24+20
 200 0068 FFF7FEFF 		bl	OSC1_SIGNCHANGE_NegativeISR_StartEx
 201              	.LVL29:
  59:.\main.c      ****     CyGlobalIntEnable; /* Enable global interrupts. */
 202              		.loc 1 59 0
 203 006c 0026     		movs	r6, #0
 204              	.LVL30:
 205              	.L19:
 206              	.LBB7:
  89:.\main.c      **** //    OSC1_Mux_Init();
  90:.\main.c      **** //    OSC1_Mux_Start();
  91:.\main.c      **** //    OSC1_Mux_Next();
  92:.\main.c      **** //    OSC1_ISR_Start();
  93:.\main.c      **** //    OSC1_Inverter_Start();
  94:.\main.c      **** //    OSC1_Inverter_Enable();
  95:.\main.c      ****     
  96:.\main.c      ****     for(;;)
  97:.\main.c      ****     {
  98:.\main.c      ****         if (pinState == 0)
 207              		.loc 1 98 0
 208 006e 26B9     		cbnz	r6, .L10
 209              	.LVL31:
  99:.\main.c      ****         {
 100:.\main.c      ****             pinState = 1;
 101:.\main.c      ****             test_pin_Write(00);
 210              		.loc 1 101 0
 211 0070 0020     		movs	r0, #0
 212 0072 FFF7FEFF 		bl	test_pin_Write
 213              	.LVL32:
 100:.\main.c      ****             test_pin_Write(00);
 214              		.loc 1 100 0
 215 0076 0126     		movs	r6, #1
 216 0078 03E0     		b	.L11
 217              	.LVL33:
 218              	.L10:
 102:.\main.c      ****         }
 103:.\main.c      ****         else
 104:.\main.c      ****         {
 105:.\main.c      ****             pinState = 0;
 106:.\main.c      ****             test_pin_Write(0xff);
 219              		.loc 1 106 0
 220 007a FF20     		movs	r0, #255
 221 007c FFF7FEFF 		bl	test_pin_Write
 222              	.LVL34:
 105:.\main.c      ****             test_pin_Write(0xff);
 223              		.loc 1 105 0
 224 0080 0026     		movs	r6, #0
 225              	.LVL35:
 226              	.L11:
 107:.\main.c      ****         }
 108:.\main.c      ****         int32_t result = (abs(ADC_DelSig_1_GetResult32()));
 227              		.loc 1 108 0
 228 0082 FFF7FEFF 		bl	ADC_DelSig_1_GetResult32
 229              	.LVL36:
 230 0086 0028     		cmp	r0, #0
 231 0088 B8BF     		it	lt
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 7


 232 008a 4042     		rsblt	r0, r0, #0
 233              	.LVL37:
 109:.\main.c      ****         
 110:.\main.c      ****         
 111:.\main.c      ****         
 112:.\main.c      ****         uint32_t frequency = (20*result*(
 234              		.loc 1 112 0
 235 008c 00EB8004 		add	r4, r0, r0, lsl #2
 236 0090 A400     		lsls	r4, r4, #2
 113:.\main.c      ****             pow(1.059463094,(
 114:.\main.c      ****                 12*(OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(0)) + 
 237              		.loc 1 114 0
 238 0092 0020     		movs	r0, #0
 239              	.LVL38:
 240 0094 FFF7FEFF 		bl	OSC1_ADC_SAR_GetResult16
 241              	.LVL39:
 242 0098 FFF7FEFF 		bl	OSC1_ADC_SAR_CountsTo_Volts
 243              	.LVL40:
 244 009c 0546     		mov	r5, r0
 115:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(1))*2 + 
 245              		.loc 1 115 0
 246 009e 0120     		movs	r0, #1
 247 00a0 FFF7FEFF 		bl	OSC1_ADC_SAR_GetResult16
 248              	.LVL41:
 249 00a4 FFF7FEFF 		bl	OSC1_ADC_SAR_CountsTo_Volts
 250              	.LVL42:
 251 00a8 0146     		mov	r1, r0
 252 00aa FFF7FEFF 		bl	__aeabi_fadd
 253              	.LVL43:
 254 00ae 0146     		mov	r1, r0
 114:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(1))*2 + 
 255              		.loc 1 114 0
 256 00b0 2846     		mov	r0, r5
 257 00b2 FFF7FEFF 		bl	__aeabi_fadd
 258              	.LVL44:
 259 00b6 0546     		mov	r5, r0
 116:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(2))/5 + 
 260              		.loc 1 116 0
 261 00b8 0220     		movs	r0, #2
 262 00ba FFF7FEFF 		bl	OSC1_ADC_SAR_GetResult16
 263              	.LVL45:
 264 00be FFF7FEFF 		bl	OSC1_ADC_SAR_CountsTo_Volts
 265              	.LVL46:
 266 00c2 5149     		ldr	r1, .L24+24
 267 00c4 FFF7FEFF 		bl	__aeabi_fdiv
 268              	.LVL47:
 269 00c8 0146     		mov	r1, r0
 115:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(1))*2 + 
 270              		.loc 1 115 0
 271 00ca 2846     		mov	r0, r5
 272 00cc FFF7FEFF 		bl	__aeabi_fadd
 273              	.LVL48:
 274 00d0 0546     		mov	r5, r0
 117:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(3))/5/12))
 275              		.loc 1 117 0
 276 00d2 0320     		movs	r0, #3
 277 00d4 FFF7FEFF 		bl	OSC1_ADC_SAR_GetResult16
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 8


 278              	.LVL49:
 279 00d8 FFF7FEFF 		bl	OSC1_ADC_SAR_CountsTo_Volts
 280              	.LVL50:
 281 00dc 4A49     		ldr	r1, .L24+24
 282 00de FFF7FEFF 		bl	__aeabi_fdiv
 283              	.LVL51:
 284 00e2 4A49     		ldr	r1, .L24+28
 285 00e4 FFF7FEFF 		bl	__aeabi_fdiv
 286              	.LVL52:
 287 00e8 0146     		mov	r1, r0
 116:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(2))/5 + 
 288              		.loc 1 116 0
 289 00ea 2846     		mov	r0, r5
 290 00ec FFF7FEFF 		bl	__aeabi_fadd
 291              	.LVL53:
 114:.\main.c      ****                     OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(1))*2 + 
 292              		.loc 1 114 0
 293 00f0 4649     		ldr	r1, .L24+28
 294 00f2 FFF7FEFF 		bl	__aeabi_fmul
 295              	.LVL54:
 113:.\main.c      ****                 12*(OSC1_ADC_SAR_CountsTo_Volts(OSC1_ADC_SAR_GetResult16(0)) + 
 296              		.loc 1 113 0
 297 00f6 FFF7FEFF 		bl	__aeabi_f2d
 298              	.LVL55:
 299 00fa 0246     		mov	r2, r0
 300 00fc 0B46     		mov	r3, r1
 301 00fe 3CA1     		adr	r1, .L24
 302 0100 D1E90001 		ldrd	r0, [r1]
 303 0104 FFF7FEFF 		bl	pow
 304              	.LVL56:
 305 0108 8046     		mov	r8, r0
 306 010a 8946     		mov	r9, r1
 112:.\main.c      ****             pow(1.059463094,(
 307              		.loc 1 112 0
 308 010c 2046     		mov	r0, r4
 309 010e FFF7FEFF 		bl	__aeabi_i2d
 310              	.LVL57:
 311 0112 4246     		mov	r2, r8
 312 0114 4B46     		mov	r3, r9
 313 0116 FFF7FEFF 		bl	__aeabi_dmul
 314              	.LVL58:
 118:.\main.c      ****             )))/32767;
 315              		.loc 1 118 0
 316 011a 37A3     		adr	r3, .L24+8
 317 011c D3E90023 		ldrd	r2, [r3]
 318 0120 FFF7FEFF 		bl	__aeabi_ddiv
 319              	.LVL59:
 112:.\main.c      ****             pow(1.059463094,(
 320              		.loc 1 112 0
 321 0124 FFF7FEFF 		bl	__aeabi_d2uiz
 322              	.LVL60:
 323 0128 0546     		mov	r5, r0
 324              	.LVL61:
 119:.\main.c      **** //        int frequency = (220*(pow(1.059463094,(12*myFixedValue))));
 120:.\main.c      ****  //       int frequency = (110*(pow(2, 5*result/65535)));
 121:.\main.c      ****         if (frequency > 20000)
 325              		.loc 1 121 0
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 9


 326 012a 44F62063 		movw	r3, #20000
 327 012e 9842     		cmp	r0, r3
 328 0130 01D8     		bhi	.L20
 122:.\main.c      ****         {
 123:.\main.c      ****             frequency = 20000;
 124:.\main.c      ****         } else if (frequency < 1)
 329              		.loc 1 124 0
 330 0132 18B1     		cbz	r0, .L21
 331 0134 03E0     		b	.L12
 332              	.L20:
 123:.\main.c      ****         } else if (frequency < 1)
 333              		.loc 1 123 0
 334 0136 44F62065 		movw	r5, #20000
 335 013a 00E0     		b	.L12
 336              	.L21:
 125:.\main.c      ****         {
 126:.\main.c      ****             frequency = 1;
 337              		.loc 1 126 0
 338 013c 0125     		movs	r5, #1
 339              	.L12:
 340              	.LVL62:
 341              	.LBB8:
 342              	.LBB9:
 343              		.file 2 "Generated_Source\\PSoC5/core_cmFunc.h"
   1:Generated_Source\PSoC5/core_cmFunc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:Generated_Source\PSoC5/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:Generated_Source\PSoC5/core_cmFunc.h ****  * @version  V4.10
   5:Generated_Source\PSoC5/core_cmFunc.h ****  * @date     18. March 2015
   6:Generated_Source\PSoC5/core_cmFunc.h ****  *
   7:Generated_Source\PSoC5/core_cmFunc.h ****  * @note
   8:Generated_Source\PSoC5/core_cmFunc.h ****  *
   9:Generated_Source\PSoC5/core_cmFunc.h ****  ******************************************************************************/
  10:Generated_Source\PSoC5/core_cmFunc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:Generated_Source\PSoC5/core_cmFunc.h **** 
  12:Generated_Source\PSoC5/core_cmFunc.h ****    All rights reserved.
  13:Generated_Source\PSoC5/core_cmFunc.h ****    Redistribution and use in source and binary forms, with or without
  14:Generated_Source\PSoC5/core_cmFunc.h ****    modification, are permitted provided that the following conditions are met:
  15:Generated_Source\PSoC5/core_cmFunc.h ****    - Redistributions of source code must retain the above copyright
  16:Generated_Source\PSoC5/core_cmFunc.h ****      notice, this list of conditions and the following disclaimer.
  17:Generated_Source\PSoC5/core_cmFunc.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Generated_Source\PSoC5/core_cmFunc.h ****      notice, this list of conditions and the following disclaimer in the
  19:Generated_Source\PSoC5/core_cmFunc.h ****      documentation and/or other materials provided with the distribution.
  20:Generated_Source\PSoC5/core_cmFunc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Generated_Source\PSoC5/core_cmFunc.h ****      to endorse or promote products derived from this software without
  22:Generated_Source\PSoC5/core_cmFunc.h ****      specific prior written permission.
  23:Generated_Source\PSoC5/core_cmFunc.h ****    *
  24:Generated_Source\PSoC5/core_cmFunc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Generated_Source\PSoC5/core_cmFunc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Generated_Source\PSoC5/core_cmFunc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Generated_Source\PSoC5/core_cmFunc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Generated_Source\PSoC5/core_cmFunc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Generated_Source\PSoC5/core_cmFunc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Generated_Source\PSoC5/core_cmFunc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Generated_Source\PSoC5/core_cmFunc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Generated_Source\PSoC5/core_cmFunc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Generated_Source\PSoC5/core_cmFunc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 10


  34:Generated_Source\PSoC5/core_cmFunc.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Generated_Source\PSoC5/core_cmFunc.h ****    ---------------------------------------------------------------------------*/
  36:Generated_Source\PSoC5/core_cmFunc.h **** 
  37:Generated_Source\PSoC5/core_cmFunc.h **** 
  38:Generated_Source\PSoC5/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  39:Generated_Source\PSoC5/core_cmFunc.h **** #define __CORE_CMFUNC_H
  40:Generated_Source\PSoC5/core_cmFunc.h **** 
  41:Generated_Source\PSoC5/core_cmFunc.h **** 
  42:Generated_Source\PSoC5/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  43:Generated_Source\PSoC5/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  44:Generated_Source\PSoC5/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  45:Generated_Source\PSoC5/core_cmFunc.h ****   @{
  46:Generated_Source\PSoC5/core_cmFunc.h ****  */
  47:Generated_Source\PSoC5/core_cmFunc.h **** 
  48:Generated_Source\PSoC5/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Generated_Source\PSoC5/core_cmFunc.h **** /* ARM armcc specific functions */
  50:Generated_Source\PSoC5/core_cmFunc.h **** 
  51:Generated_Source\PSoC5/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  52:Generated_Source\PSoC5/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Generated_Source\PSoC5/core_cmFunc.h **** #endif
  54:Generated_Source\PSoC5/core_cmFunc.h **** 
  55:Generated_Source\PSoC5/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  56:Generated_Source\PSoC5/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  57:Generated_Source\PSoC5/core_cmFunc.h **** 
  58:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Control Register
  59:Generated_Source\PSoC5/core_cmFunc.h **** 
  60:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the content of the Control Register.
  61:Generated_Source\PSoC5/core_cmFunc.h **** 
  62:Generated_Source\PSoC5/core_cmFunc.h ****     \return               Control Register value
  63:Generated_Source\PSoC5/core_cmFunc.h ****  */
  64:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  65:Generated_Source\PSoC5/core_cmFunc.h **** {
  66:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  67:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regControl);
  68:Generated_Source\PSoC5/core_cmFunc.h **** }
  69:Generated_Source\PSoC5/core_cmFunc.h **** 
  70:Generated_Source\PSoC5/core_cmFunc.h **** 
  71:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Control Register
  72:Generated_Source\PSoC5/core_cmFunc.h **** 
  73:Generated_Source\PSoC5/core_cmFunc.h ****     This function writes the given value to the Control Register.
  74:Generated_Source\PSoC5/core_cmFunc.h **** 
  75:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  76:Generated_Source\PSoC5/core_cmFunc.h ****  */
  77:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  78:Generated_Source\PSoC5/core_cmFunc.h **** {
  79:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  80:Generated_Source\PSoC5/core_cmFunc.h ****   __regControl = control;
  81:Generated_Source\PSoC5/core_cmFunc.h **** }
  82:Generated_Source\PSoC5/core_cmFunc.h **** 
  83:Generated_Source\PSoC5/core_cmFunc.h **** 
  84:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get IPSR Register
  85:Generated_Source\PSoC5/core_cmFunc.h **** 
  86:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  87:Generated_Source\PSoC5/core_cmFunc.h **** 
  88:Generated_Source\PSoC5/core_cmFunc.h ****     \return               IPSR Register value
  89:Generated_Source\PSoC5/core_cmFunc.h ****  */
  90:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 11


  91:Generated_Source\PSoC5/core_cmFunc.h **** {
  92:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  93:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regIPSR);
  94:Generated_Source\PSoC5/core_cmFunc.h **** }
  95:Generated_Source\PSoC5/core_cmFunc.h **** 
  96:Generated_Source\PSoC5/core_cmFunc.h **** 
  97:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get APSR Register
  98:Generated_Source\PSoC5/core_cmFunc.h **** 
  99:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the content of the APSR Register.
 100:Generated_Source\PSoC5/core_cmFunc.h **** 
 101:Generated_Source\PSoC5/core_cmFunc.h ****     \return               APSR Register value
 102:Generated_Source\PSoC5/core_cmFunc.h ****  */
 103:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
 104:Generated_Source\PSoC5/core_cmFunc.h **** {
 105:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
 106:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regAPSR);
 107:Generated_Source\PSoC5/core_cmFunc.h **** }
 108:Generated_Source\PSoC5/core_cmFunc.h **** 
 109:Generated_Source\PSoC5/core_cmFunc.h **** 
 110:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get xPSR Register
 111:Generated_Source\PSoC5/core_cmFunc.h **** 
 112:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 113:Generated_Source\PSoC5/core_cmFunc.h **** 
 114:Generated_Source\PSoC5/core_cmFunc.h ****     \return               xPSR Register value
 115:Generated_Source\PSoC5/core_cmFunc.h ****  */
 116:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 117:Generated_Source\PSoC5/core_cmFunc.h **** {
 118:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 119:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regXPSR);
 120:Generated_Source\PSoC5/core_cmFunc.h **** }
 121:Generated_Source\PSoC5/core_cmFunc.h **** 
 122:Generated_Source\PSoC5/core_cmFunc.h **** 
 123:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 124:Generated_Source\PSoC5/core_cmFunc.h **** 
 125:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 126:Generated_Source\PSoC5/core_cmFunc.h **** 
 127:Generated_Source\PSoC5/core_cmFunc.h ****     \return               PSP Register value
 128:Generated_Source\PSoC5/core_cmFunc.h ****  */
 129:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 130:Generated_Source\PSoC5/core_cmFunc.h **** {
 131:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 132:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regProcessStackPointer);
 133:Generated_Source\PSoC5/core_cmFunc.h **** }
 134:Generated_Source\PSoC5/core_cmFunc.h **** 
 135:Generated_Source\PSoC5/core_cmFunc.h **** 
 136:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 137:Generated_Source\PSoC5/core_cmFunc.h **** 
 138:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 139:Generated_Source\PSoC5/core_cmFunc.h **** 
 140:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 141:Generated_Source\PSoC5/core_cmFunc.h ****  */
 142:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 143:Generated_Source\PSoC5/core_cmFunc.h **** {
 144:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 145:Generated_Source\PSoC5/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 146:Generated_Source\PSoC5/core_cmFunc.h **** }
 147:Generated_Source\PSoC5/core_cmFunc.h **** 
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 12


 148:Generated_Source\PSoC5/core_cmFunc.h **** 
 149:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 150:Generated_Source\PSoC5/core_cmFunc.h **** 
 151:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 152:Generated_Source\PSoC5/core_cmFunc.h **** 
 153:Generated_Source\PSoC5/core_cmFunc.h ****     \return               MSP Register value
 154:Generated_Source\PSoC5/core_cmFunc.h ****  */
 155:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 156:Generated_Source\PSoC5/core_cmFunc.h **** {
 157:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 158:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regMainStackPointer);
 159:Generated_Source\PSoC5/core_cmFunc.h **** }
 160:Generated_Source\PSoC5/core_cmFunc.h **** 
 161:Generated_Source\PSoC5/core_cmFunc.h **** 
 162:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 163:Generated_Source\PSoC5/core_cmFunc.h **** 
 164:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 165:Generated_Source\PSoC5/core_cmFunc.h **** 
 166:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 167:Generated_Source\PSoC5/core_cmFunc.h ****  */
 168:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 169:Generated_Source\PSoC5/core_cmFunc.h **** {
 170:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 171:Generated_Source\PSoC5/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 172:Generated_Source\PSoC5/core_cmFunc.h **** }
 173:Generated_Source\PSoC5/core_cmFunc.h **** 
 174:Generated_Source\PSoC5/core_cmFunc.h **** 
 175:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Priority Mask
 176:Generated_Source\PSoC5/core_cmFunc.h **** 
 177:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 178:Generated_Source\PSoC5/core_cmFunc.h **** 
 179:Generated_Source\PSoC5/core_cmFunc.h ****     \return               Priority Mask value
 180:Generated_Source\PSoC5/core_cmFunc.h ****  */
 181:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 182:Generated_Source\PSoC5/core_cmFunc.h **** {
 183:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 184:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regPriMask);
 185:Generated_Source\PSoC5/core_cmFunc.h **** }
 186:Generated_Source\PSoC5/core_cmFunc.h **** 
 187:Generated_Source\PSoC5/core_cmFunc.h **** 
 188:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Priority Mask
 189:Generated_Source\PSoC5/core_cmFunc.h **** 
 190:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 191:Generated_Source\PSoC5/core_cmFunc.h **** 
 192:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 193:Generated_Source\PSoC5/core_cmFunc.h ****  */
 194:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 195:Generated_Source\PSoC5/core_cmFunc.h **** {
 196:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 197:Generated_Source\PSoC5/core_cmFunc.h ****   __regPriMask = (priMask);
 198:Generated_Source\PSoC5/core_cmFunc.h **** }
 199:Generated_Source\PSoC5/core_cmFunc.h **** 
 200:Generated_Source\PSoC5/core_cmFunc.h **** 
 201:Generated_Source\PSoC5/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 202:Generated_Source\PSoC5/core_cmFunc.h **** 
 203:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Enable FIQ
 204:Generated_Source\PSoC5/core_cmFunc.h **** 
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 13


 205:Generated_Source\PSoC5/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 206:Generated_Source\PSoC5/core_cmFunc.h ****     Can only be executed in Privileged modes.
 207:Generated_Source\PSoC5/core_cmFunc.h ****  */
 208:Generated_Source\PSoC5/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 209:Generated_Source\PSoC5/core_cmFunc.h **** 
 210:Generated_Source\PSoC5/core_cmFunc.h **** 
 211:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Disable FIQ
 212:Generated_Source\PSoC5/core_cmFunc.h **** 
 213:Generated_Source\PSoC5/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 214:Generated_Source\PSoC5/core_cmFunc.h ****     Can only be executed in Privileged modes.
 215:Generated_Source\PSoC5/core_cmFunc.h ****  */
 216:Generated_Source\PSoC5/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 217:Generated_Source\PSoC5/core_cmFunc.h **** 
 218:Generated_Source\PSoC5/core_cmFunc.h **** 
 219:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Base Priority
 220:Generated_Source\PSoC5/core_cmFunc.h **** 
 221:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 222:Generated_Source\PSoC5/core_cmFunc.h **** 
 223:Generated_Source\PSoC5/core_cmFunc.h ****     \return               Base Priority register value
 224:Generated_Source\PSoC5/core_cmFunc.h ****  */
 225:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 226:Generated_Source\PSoC5/core_cmFunc.h **** {
 227:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 228:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regBasePri);
 229:Generated_Source\PSoC5/core_cmFunc.h **** }
 230:Generated_Source\PSoC5/core_cmFunc.h **** 
 231:Generated_Source\PSoC5/core_cmFunc.h **** 
 232:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Base Priority
 233:Generated_Source\PSoC5/core_cmFunc.h **** 
 234:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 235:Generated_Source\PSoC5/core_cmFunc.h **** 
 236:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 237:Generated_Source\PSoC5/core_cmFunc.h ****  */
 238:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 239:Generated_Source\PSoC5/core_cmFunc.h **** {
 240:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 241:Generated_Source\PSoC5/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 242:Generated_Source\PSoC5/core_cmFunc.h **** }
 243:Generated_Source\PSoC5/core_cmFunc.h **** 
 244:Generated_Source\PSoC5/core_cmFunc.h **** 
 245:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Base Priority with condition
 246:Generated_Source\PSoC5/core_cmFunc.h **** 
 247:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Base Priority register only if BASEPRI masking is 
 248:Generated_Source\PSoC5/core_cmFunc.h ****     or the new value increases the BASEPRI priority level.
 249:Generated_Source\PSoC5/core_cmFunc.h **** 
 250:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 251:Generated_Source\PSoC5/core_cmFunc.h ****  */
 252:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 253:Generated_Source\PSoC5/core_cmFunc.h **** {
 254:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regBasePriMax      __ASM("basepri_max");
 255:Generated_Source\PSoC5/core_cmFunc.h ****   __regBasePriMax = (basePri & 0xff);
 256:Generated_Source\PSoC5/core_cmFunc.h **** }
 257:Generated_Source\PSoC5/core_cmFunc.h **** 
 258:Generated_Source\PSoC5/core_cmFunc.h **** 
 259:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get Fault Mask
 260:Generated_Source\PSoC5/core_cmFunc.h **** 
 261:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 14


 262:Generated_Source\PSoC5/core_cmFunc.h **** 
 263:Generated_Source\PSoC5/core_cmFunc.h ****     \return               Fault Mask register value
 264:Generated_Source\PSoC5/core_cmFunc.h ****  */
 265:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 266:Generated_Source\PSoC5/core_cmFunc.h **** {
 267:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 268:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regFaultMask);
 269:Generated_Source\PSoC5/core_cmFunc.h **** }
 270:Generated_Source\PSoC5/core_cmFunc.h **** 
 271:Generated_Source\PSoC5/core_cmFunc.h **** 
 272:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set Fault Mask
 273:Generated_Source\PSoC5/core_cmFunc.h **** 
 274:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 275:Generated_Source\PSoC5/core_cmFunc.h **** 
 276:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 277:Generated_Source\PSoC5/core_cmFunc.h ****  */
 278:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 279:Generated_Source\PSoC5/core_cmFunc.h **** {
 280:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 281:Generated_Source\PSoC5/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 282:Generated_Source\PSoC5/core_cmFunc.h **** }
 283:Generated_Source\PSoC5/core_cmFunc.h **** 
 284:Generated_Source\PSoC5/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 285:Generated_Source\PSoC5/core_cmFunc.h **** 
 286:Generated_Source\PSoC5/core_cmFunc.h **** 
 287:Generated_Source\PSoC5/core_cmFunc.h **** #if       (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07)
 288:Generated_Source\PSoC5/core_cmFunc.h **** 
 289:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Get FPSCR
 290:Generated_Source\PSoC5/core_cmFunc.h **** 
 291:Generated_Source\PSoC5/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 292:Generated_Source\PSoC5/core_cmFunc.h **** 
 293:Generated_Source\PSoC5/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 294:Generated_Source\PSoC5/core_cmFunc.h ****  */
 295:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 296:Generated_Source\PSoC5/core_cmFunc.h **** {
 297:Generated_Source\PSoC5/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 298:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 299:Generated_Source\PSoC5/core_cmFunc.h ****   return(__regfpscr);
 300:Generated_Source\PSoC5/core_cmFunc.h **** #else
 301:Generated_Source\PSoC5/core_cmFunc.h ****    return(0);
 302:Generated_Source\PSoC5/core_cmFunc.h **** #endif
 303:Generated_Source\PSoC5/core_cmFunc.h **** }
 304:Generated_Source\PSoC5/core_cmFunc.h **** 
 305:Generated_Source\PSoC5/core_cmFunc.h **** 
 306:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Set FPSCR
 307:Generated_Source\PSoC5/core_cmFunc.h **** 
 308:Generated_Source\PSoC5/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 309:Generated_Source\PSoC5/core_cmFunc.h **** 
 310:Generated_Source\PSoC5/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 311:Generated_Source\PSoC5/core_cmFunc.h ****  */
 312:Generated_Source\PSoC5/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 313:Generated_Source\PSoC5/core_cmFunc.h **** {
 314:Generated_Source\PSoC5/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 315:Generated_Source\PSoC5/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 316:Generated_Source\PSoC5/core_cmFunc.h ****   __regfpscr = (fpscr);
 317:Generated_Source\PSoC5/core_cmFunc.h **** #endif
 318:Generated_Source\PSoC5/core_cmFunc.h **** }
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 15


 319:Generated_Source\PSoC5/core_cmFunc.h **** 
 320:Generated_Source\PSoC5/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07) */
 321:Generated_Source\PSoC5/core_cmFunc.h **** 
 322:Generated_Source\PSoC5/core_cmFunc.h **** 
 323:Generated_Source\PSoC5/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 324:Generated_Source\PSoC5/core_cmFunc.h **** /* GNU gcc specific functions */
 325:Generated_Source\PSoC5/core_cmFunc.h **** 
 326:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 327:Generated_Source\PSoC5/core_cmFunc.h **** 
 328:Generated_Source\PSoC5/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 329:Generated_Source\PSoC5/core_cmFunc.h ****   Can only be executed in Privileged modes.
 330:Generated_Source\PSoC5/core_cmFunc.h ****  */
 331:Generated_Source\PSoC5/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 332:Generated_Source\PSoC5/core_cmFunc.h **** {
 333:Generated_Source\PSoC5/core_cmFunc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 334:Generated_Source\PSoC5/core_cmFunc.h **** }
 335:Generated_Source\PSoC5/core_cmFunc.h **** 
 336:Generated_Source\PSoC5/core_cmFunc.h **** 
 337:Generated_Source\PSoC5/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 338:Generated_Source\PSoC5/core_cmFunc.h **** 
 339:Generated_Source\PSoC5/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 340:Generated_Source\PSoC5/core_cmFunc.h ****   Can only be executed in Privileged modes.
 341:Generated_Source\PSoC5/core_cmFunc.h ****  */
 342:Generated_Source\PSoC5/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 343:Generated_Source\PSoC5/core_cmFunc.h **** {
 344:Generated_Source\PSoC5/core_cmFunc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 344              		.loc 2 344 0
 345              	@ 344 "Generated_Source\PSoC5/core_cmFunc.h" 1
 346 013e 72B6     		cpsid i
 347              	@ 0 "" 2
 348              		.thumb
 349              	.LBE9:
 350              	.LBE8:
 127:.\main.c      ****         }
 128:.\main.c      ****         __disable_irq();
 129:.\main.c      ****         oldCount = count;
 351              		.loc 1 129 0
 352 0140 3349     		ldr	r1, .L24+32
 353 0142 0C68     		ldr	r4, [r1]
 354 0144 334B     		ldr	r3, .L24+36
 355 0146 1C60     		str	r4, [r3]
 130:.\main.c      ****         count = 12000000/frequency;
 356              		.loc 1 130 0
 357 0148 334A     		ldr	r2, .L24+40
 358 014a B2FBF5F3 		udiv	r3, r2, r5
 359 014e 0B60     		str	r3, [r1]
 131:.\main.c      ****         deltaCount = (int32_t)count - (int32_t)oldCount;
 360              		.loc 1 131 0
 361 0150 1C1B     		subs	r4, r3, r4
 362              	.LVL63:
 132:.\main.c      ****         OSC1_Freq_Timer_Stop();
 363              		.loc 1 132 0
 364 0152 FFF7FEFF 		bl	OSC1_Freq_Timer_Stop
 365              	.LVL64:
 133:.\main.c      ****         newReg = OSC1_Freq_Timer_ReadCounter() + deltaCount;
 366              		.loc 1 133 0
 367 0156 FFF7FEFF 		bl	OSC1_Freq_Timer_ReadCounter
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 16


 368              	.LVL65:
 369 015a 0319     		adds	r3, r0, r4
 370 015c 1846     		mov	r0, r3
 371              	.LVL66:
 134:.\main.c      ****         if (newReg < 0)
 372              		.loc 1 134 0
 373 015e 002B     		cmp	r3, #0
 374 0160 05DB     		blt	.L22
 135:.\main.c      ****         {
 136:.\main.c      ****           newReg = 1;
 137:.\main.c      ****         }
 138:.\main.c      ****         else if ((uint32_t)newReg > count)
 375              		.loc 1 138 0
 376 0162 2B4A     		ldr	r2, .L24+32
 377 0164 1268     		ldr	r2, [r2]
 378 0166 9342     		cmp	r3, r2
 379 0168 02D9     		bls	.L13
 139:.\main.c      ****         {
 140:.\main.c      ****           newReg = count;
 380              		.loc 1 140 0
 381 016a 1046     		mov	r0, r2
 382              	.LVL67:
 383 016c 00E0     		b	.L13
 384              	.L22:
 136:.\main.c      ****         }
 385              		.loc 1 136 0
 386 016e 0120     		movs	r0, #1
 387              	.LVL68:
 388              	.L13:
 141:.\main.c      ****         }
 142:.\main.c      ****         OSC1_Freq_Timer_WriteCounter(newReg);
 389              		.loc 1 142 0
 390 0170 FFF7FEFF 		bl	OSC1_Freq_Timer_WriteCounter
 391              	.LVL69:
 143:.\main.c      ****         OSC1_Freq_Timer_WritePeriod(count);
 392              		.loc 1 143 0
 393 0174 264B     		ldr	r3, .L24+32
 394 0176 1868     		ldr	r0, [r3]
 395 0178 FFF7FEFF 		bl	OSC1_Freq_Timer_WritePeriod
 396              	.LVL70:
 144:.\main.c      **** //        if (count < OSC1_Freq_Timer_ReadCounter()) {
 145:.\main.c      **** //            OSC1_Freq_Timer_WriteCounter(count);
 146:.\main.c      **** //        }
 147:.\main.c      ****         OSC1_Freq_Timer_Start();
 397              		.loc 1 147 0
 398 017c FFF7FEFF 		bl	OSC1_Freq_Timer_Start
 399              	.LVL71:
 400              	.LBB10:
 401              	.LBB11:
 333:Generated_Source\PSoC5/core_cmFunc.h **** }
 402              		.loc 2 333 0
 403              	@ 333 "Generated_Source\PSoC5/core_cmFunc.h" 1
 404 0180 62B6     		cpsie i
 405              	@ 0 "" 2
 406              		.thumb
 407              	.LBE11:
 408              	.LBE10:
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 17


 148:.\main.c      ****         __enable_irq();
 149:.\main.c      **** //       OSC1_Freq_Timer_1_WritePeriod(count*2);
 150:.\main.c      ****     if (frequency > 3950){
 409              		.loc 1 150 0
 410 0182 40F66E73 		movw	r3, #3950
 411 0186 9D42     		cmp	r5, r3
 412 0188 09D9     		bls	.L14
 151:.\main.c      ****         OSC1_IDAC8_SetRange(OSC1_IDAC8_RANGE_2mA);
 413              		.loc 1 151 0
 414 018a 0820     		movs	r0, #8
 415 018c FFF7FEFF 		bl	OSC1_IDAC8_SetRange
 416              	.LVL72:
 152:.\main.c      ****         OSC1_IDAC8_SAW_SetRange(OSC1_IDAC8_SAW_RANGE_2mA);
 417              		.loc 1 152 0
 418 0190 0820     		movs	r0, #8
 419 0192 FFF7FEFF 		bl	OSC1_IDAC8_SAW_SetRange
 420              	.LVL73:
 153:.\main.c      ****         dac_value = frequency / 32 ;
 421              		.loc 1 153 0
 422 0196 6D09     		lsrs	r5, r5, #5
 423              	.LVL74:
 424 0198 204B     		ldr	r3, .L24+44
 425 019a 1D60     		str	r5, [r3]
 426 019c 15E0     		b	.L15
 427              	.LVL75:
 428              	.L14:
 154:.\main.c      ****     }
 155:.\main.c      ****     else if (frequency > 493){
 429              		.loc 1 155 0
 430 019e B5F5F77F 		cmp	r5, #494
 431 01a2 09D3     		bcc	.L16
 156:.\main.c      ****         OSC1_IDAC8_SetRange(OSC1_IDAC8_RANGE_255uA);
 432              		.loc 1 156 0
 433 01a4 0420     		movs	r0, #4
 434 01a6 FFF7FEFF 		bl	OSC1_IDAC8_SetRange
 435              	.LVL76:
 157:.\main.c      ****         OSC1_IDAC8_SAW_SetRange(OSC1_IDAC8_SAW_RANGE_255uA);
 436              		.loc 1 157 0
 437 01aa 0420     		movs	r0, #4
 438 01ac FFF7FEFF 		bl	OSC1_IDAC8_SAW_SetRange
 439              	.LVL77:
 158:.\main.c      ****         dac_value = frequency /4 ;}
 440              		.loc 1 158 0
 441 01b0 AD08     		lsrs	r5, r5, #2
 442              	.LVL78:
 443 01b2 1A4B     		ldr	r3, .L24+44
 444 01b4 1D60     		str	r5, [r3]
 445 01b6 08E0     		b	.L15
 446              	.LVL79:
 447              	.L16:
 159:.\main.c      ****     else {
 160:.\main.c      ****         OSC1_IDAC8_SetRange(OSC1_IDAC8_RANGE_32uA);
 448              		.loc 1 160 0
 449 01b8 0020     		movs	r0, #0
 450 01ba FFF7FEFF 		bl	OSC1_IDAC8_SetRange
 451              	.LVL80:
 161:.\main.c      ****         OSC1_IDAC8_SAW_SetRange(OSC1_IDAC8_SAW_RANGE_32uA);
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 18


 452              		.loc 1 161 0
 453 01be 0020     		movs	r0, #0
 454 01c0 FFF7FEFF 		bl	OSC1_IDAC8_SAW_SetRange
 455              	.LVL81:
 162:.\main.c      ****         dac_value = frequency * 2;
 456              		.loc 1 162 0
 457 01c4 6D00     		lsls	r5, r5, #1
 458              	.LVL82:
 459 01c6 154B     		ldr	r3, .L24+44
 460 01c8 1D60     		str	r5, [r3]
 461              	.L15:
 163:.\main.c      ****      }   
 164:.\main.c      ****         
 165:.\main.c      ****    //    dac_value=(frequency/8);
 166:.\main.c      ****     OSC1_IDAC8_SetValue(dac_value/4);
 462              		.loc 1 166 0
 463 01ca 144B     		ldr	r3, .L24+44
 464 01cc 1868     		ldr	r0, [r3]
 465 01ce 0028     		cmp	r0, #0
 466 01d0 00DA     		bge	.L17
 467 01d2 0330     		adds	r0, r0, #3
 468              	.L17:
 469 01d4 C0F38700 		ubfx	r0, r0, #2, #8
 470 01d8 FFF7FEFF 		bl	OSC1_IDAC8_SetValue
 471              	.LVL83:
 167:.\main.c      ****     OSC1_IDAC8_SAW_SetValue(dac_value/4);
 472              		.loc 1 167 0
 473 01dc 0F4B     		ldr	r3, .L24+44
 474 01de 1868     		ldr	r0, [r3]
 475 01e0 0028     		cmp	r0, #0
 476 01e2 00DA     		bge	.L18
 477 01e4 0330     		adds	r0, r0, #3
 478              	.L18:
 479 01e6 C0F38700 		ubfx	r0, r0, #2, #8
 480 01ea FFF7FEFF 		bl	OSC1_IDAC8_SAW_SetValue
 481              	.LVL84:
 482              	.LBE7:
 168:.\main.c      ****   //      CyDelay(1000); /* Place your application code here. */
 169:.\main.c      ****     //   Freq_Timer_WritePeriod(36000);
 170:.\main.c      ****    //    IDAC8_1_SetValue(127);
 171:.\main.c      **** //       CyDelay(5000);
 172:.\main.c      **** //       Freq_Timer_WritePeriod(18000);
 173:.\main.c      ****    //    IDAC8_1_SetValue(255);
 174:.\main.c      ****     }
 483              		.loc 1 174 0
 484 01ee 3EE7     		b	.L19
 485              	.L25:
 486              		.align	3
 487              	.L24:
 488 01f0 99C8C092 		.word	-1832859495
 489 01f4 8FF3F03F 		.word	1072755599
 490 01f8 00000000 		.word	0
 491 01fc C0FFDF40 		.word	1088421824
 492 0200 00000000 		.word	SIGNCHANGE_PositiveInterrupt_Handler
 493 0204 00000000 		.word	SIGNCHANGE_NegativeInterrupt_Handler
 494 0208 0000A040 		.word	1084227584
 495 020c 00004041 		.word	1094713344
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 19


 496 0210 00000000 		.word	count
 497 0214 00000000 		.word	oldCount
 498 0218 001BB700 		.word	12000000
 499 021c 00000000 		.word	dac_value
 500              		.cfi_endproc
 501              	.LFE65:
 502              		.size	main, .-main
 503              		.comm	oldCount,4,4
 504              		.comm	count,4,4
 505              		.comm	dac_value,4,4
 506              		.text
 507              	.Letext0:
 508              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 509              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 510              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 511              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 512              		.file 7 "Generated_Source\\PSoC5/OSC1_Freq_Timer.h"
 513              		.file 8 "Generated_Source\\PSoC5/test_pin.h"
 514              		.file 9 "Generated_Source\\PSoC5/ADC_DelSig_1.h"
 515              		.file 10 "Generated_Source\\PSoC5/OSC1_ADC_SAR.h"
 516              		.file 11 "Generated_Source\\PSoC5/OSC1_IDAC8.h"
 517              		.file 12 "Generated_Source\\PSoC5/OSC1_IDAC8_SAW.h"
 518              		.file 13 "Generated_Source\\PSoC5/Clock_1.h"
 519              		.file 14 "Generated_Source\\PSoC5/OSC1_Triangle_Follower.h"
 520              		.file 15 "Generated_Source\\PSoC5/OSC1_Saw_Follower.h"
 521              		.file 16 "Generated_Source\\PSoC5/OSC1_Comp.h"
 522              		.file 17 "Generated_Source\\PSoC5/Comp_1.h"
 523              		.file 18 "Generated_Source\\PSoC5/OSC1_SIGNCHANGE_PositiveISR.h"
 524              		.file 19 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 525              		.file 20 "Generated_Source\\PSoC5/OSC1_SIGNCHANGE_NegativeISR.h"
 526              		.section	.debug_info,"",%progbits
 527              	.Ldebug_info0:
 528 0000 50060000 		.4byte	0x650
 529 0004 0400     		.2byte	0x4
 530 0006 00000000 		.4byte	.Ldebug_abbrev0
 531 000a 04       		.byte	0x4
 532 000b 01       		.uleb128 0x1
 533 000c 1E040000 		.4byte	.LASF69
 534 0010 01       		.byte	0x1
 535 0011 CF030000 		.4byte	.LASF70
 536 0015 D8030000 		.4byte	.LASF71
 537 0019 00000000 		.4byte	.Ldebug_ranges0+0
 538 001d 00000000 		.4byte	0
 539 0021 00000000 		.4byte	.Ldebug_line0
 540 0025 02       		.uleb128 0x2
 541 0026 08       		.byte	0x8
 542 0027 04       		.byte	0x4
 543 0028 A0030000 		.4byte	.LASF0
 544 002c 02       		.uleb128 0x2
 545 002d 01       		.byte	0x1
 546 002e 06       		.byte	0x6
 547 002f 50020000 		.4byte	.LASF1
 548 0033 02       		.uleb128 0x2
 549 0034 01       		.byte	0x1
 550 0035 08       		.byte	0x8
 551 0036 19020000 		.4byte	.LASF2
 552 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 20


 553 003b 02       		.byte	0x2
 554 003c 05       		.byte	0x5
 555 003d FE000000 		.4byte	.LASF3
 556 0041 02       		.uleb128 0x2
 557 0042 02       		.byte	0x2
 558 0043 07       		.byte	0x7
 559 0044 07030000 		.4byte	.LASF4
 560 0048 03       		.uleb128 0x3
 561 0049 FD020000 		.4byte	.LASF6
 562 004d 03       		.byte	0x3
 563 004e 3F       		.byte	0x3f
 564 004f 53000000 		.4byte	0x53
 565 0053 02       		.uleb128 0x2
 566 0054 04       		.byte	0x4
 567 0055 05       		.byte	0x5
 568 0056 B1010000 		.4byte	.LASF5
 569 005a 03       		.uleb128 0x3
 570 005b CE000000 		.4byte	.LASF7
 571 005f 03       		.byte	0x3
 572 0060 41       		.byte	0x41
 573 0061 65000000 		.4byte	0x65
 574 0065 02       		.uleb128 0x2
 575 0066 04       		.byte	0x4
 576 0067 07       		.byte	0x7
 577 0068 6F030000 		.4byte	.LASF8
 578 006c 02       		.uleb128 0x2
 579 006d 08       		.byte	0x8
 580 006e 05       		.byte	0x5
 581 006f 8E010000 		.4byte	.LASF9
 582 0073 02       		.uleb128 0x2
 583 0074 08       		.byte	0x8
 584 0075 07       		.byte	0x7
 585 0076 5C020000 		.4byte	.LASF10
 586 007a 04       		.uleb128 0x4
 587 007b 04       		.byte	0x4
 588 007c 05       		.byte	0x5
 589 007d 696E7400 		.ascii	"int\000"
 590 0081 02       		.uleb128 0x2
 591 0082 04       		.byte	0x4
 592 0083 07       		.byte	0x7
 593 0084 7C020000 		.4byte	.LASF11
 594 0088 03       		.uleb128 0x3
 595 0089 F5020000 		.4byte	.LASF12
 596 008d 04       		.byte	0x4
 597 008e 2C       		.byte	0x2c
 598 008f 48000000 		.4byte	0x48
 599 0093 03       		.uleb128 0x3
 600 0094 73020000 		.4byte	.LASF13
 601 0098 04       		.byte	0x4
 602 0099 2D       		.byte	0x2d
 603 009a 5A000000 		.4byte	0x5a
 604 009e 05       		.uleb128 0x5
 605 009f 42010000 		.4byte	.LASF14
 606 00a3 05       		.byte	0x5
 607 00a4 3801     		.2byte	0x138
 608 00a6 33000000 		.4byte	0x33
 609 00aa 05       		.uleb128 0x5
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 21


 610 00ab 1D010000 		.4byte	.LASF15
 611 00af 05       		.byte	0x5
 612 00b0 3901     		.2byte	0x139
 613 00b2 41000000 		.4byte	0x41
 614 00b6 05       		.uleb128 0x5
 615 00b7 68030000 		.4byte	.LASF16
 616 00bb 05       		.byte	0x5
 617 00bc 3A01     		.2byte	0x13a
 618 00be 65000000 		.4byte	0x65
 619 00c2 05       		.uleb128 0x5
 620 00c3 24010000 		.4byte	.LASF17
 621 00c7 05       		.byte	0x5
 622 00c8 3C01     		.2byte	0x13c
 623 00ca 3A000000 		.4byte	0x3a
 624 00ce 05       		.uleb128 0x5
 625 00cf 9A030000 		.4byte	.LASF18
 626 00d3 05       		.byte	0x5
 627 00d4 3D01     		.2byte	0x13d
 628 00d6 53000000 		.4byte	0x53
 629 00da 05       		.uleb128 0x5
 630 00db 32000000 		.4byte	.LASF19
 631 00df 05       		.byte	0x5
 632 00e0 3E01     		.2byte	0x13e
 633 00e2 E6000000 		.4byte	0xe6
 634 00e6 02       		.uleb128 0x2
 635 00e7 04       		.byte	0x4
 636 00e8 04       		.byte	0x4
 637 00e9 88010000 		.4byte	.LASF20
 638 00ed 02       		.uleb128 0x2
 639 00ee 01       		.byte	0x1
 640 00ef 08       		.byte	0x8
 641 00f0 CE020000 		.4byte	.LASF21
 642 00f4 05       		.uleb128 0x5
 643 00f5 43020000 		.4byte	.LASF22
 644 00f9 05       		.byte	0x5
 645 00fa F401     		.2byte	0x1f4
 646 00fc 00010000 		.4byte	0x100
 647 0100 06       		.uleb128 0x6
 648 0101 04       		.byte	0x4
 649 0102 06010000 		.4byte	0x106
 650 0106 07       		.uleb128 0x7
 651 0107 02       		.uleb128 0x2
 652 0108 04       		.byte	0x4
 653 0109 07       		.byte	0x7
 654 010a 90000000 		.4byte	.LASF23
 655 010e 02       		.uleb128 0x2
 656 010f 08       		.byte	0x8
 657 0110 04       		.byte	0x4
 658 0111 C2000000 		.4byte	.LASF24
 659 0115 08       		.uleb128 0x8
 660 0116 FC010000 		.4byte	.LASF25
 661 011a 02       		.byte	0x2
 662 011b 5601     		.2byte	0x156
 663 011d 03       		.byte	0x3
 664 011e 08       		.uleb128 0x8
 665 011f EF010000 		.4byte	.LASF26
 666 0123 02       		.byte	0x2
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 22


 667 0124 4B01     		.2byte	0x14b
 668 0126 03       		.byte	0x3
 669 0127 09       		.uleb128 0x9
 670 0128 2D050000 		.4byte	.LASF27
 671 012c 01       		.byte	0x1
 672 012d 18       		.byte	0x18
 673 012e 00000000 		.4byte	.LFB63
 674 0132 20000000 		.4byte	.LFE63-.LFB63
 675 0136 01       		.uleb128 0x1
 676 0137 9C       		.byte	0x9c
 677 0138 61010000 		.4byte	0x161
 678 013c 0A       		.uleb128 0xa
 679 013d 06000000 		.4byte	.LVL0
 680 0141 ED040000 		.4byte	0x4ed
 681 0145 0A       		.uleb128 0xa
 682 0146 0E000000 		.4byte	.LVL1
 683 014a F4040000 		.4byte	0x4f4
 684 014e 0A       		.uleb128 0xa
 685 014f 14000000 		.4byte	.LVL2
 686 0153 FF040000 		.4byte	0x4ff
 687 0157 0A       		.uleb128 0xa
 688 0158 18000000 		.4byte	.LVL3
 689 015c 10050000 		.4byte	0x510
 690 0160 00       		.byte	0
 691 0161 09       		.uleb128 0x9
 692 0162 D9000000 		.4byte	.LASF28
 693 0166 01       		.byte	0x1
 694 0167 27       		.byte	0x27
 695 0168 00000000 		.4byte	.LFB64
 696 016c 20000000 		.4byte	.LFE64-.LFB64
 697 0170 01       		.uleb128 0x1
 698 0171 9C       		.byte	0x9c
 699 0172 9B010000 		.4byte	0x19b
 700 0176 0A       		.uleb128 0xa
 701 0177 06000000 		.4byte	.LVL4
 702 017b ED040000 		.4byte	0x4ed
 703 017f 0A       		.uleb128 0xa
 704 0180 0E000000 		.4byte	.LVL5
 705 0184 F4040000 		.4byte	0x4f4
 706 0188 0A       		.uleb128 0xa
 707 0189 14000000 		.4byte	.LVL6
 708 018d FF040000 		.4byte	0x4ff
 709 0191 0A       		.uleb128 0xa
 710 0192 18000000 		.4byte	.LVL7
 711 0196 10050000 		.4byte	0x510
 712 019a 00       		.byte	0
 713 019b 0B       		.uleb128 0xb
 714 019c BD000000 		.4byte	.LASF29
 715 01a0 01       		.byte	0x1
 716 01a1 39       		.byte	0x39
 717 01a2 7A000000 		.4byte	0x7a
 718 01a6 00000000 		.4byte	.LFB65
 719 01aa 20020000 		.4byte	.LFE65-.LFB65
 720 01ae 01       		.uleb128 0x1
 721 01af 9C       		.byte	0x9c
 722 01b0 A4040000 		.4byte	0x4a4
 723 01b4 0C       		.uleb128 0xc
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 23


 724 01b5 1A030000 		.4byte	.LASF30
 725 01b9 01       		.byte	0x1
 726 01ba 3B       		.byte	0x3b
 727 01bb 7A000000 		.4byte	0x7a
 728 01bf 00000000 		.4byte	.LLST0
 729 01c3 0D       		.uleb128 0xd
 730 01c4 00000000 		.4byte	.LASF31
 731 01c8 01       		.byte	0x1
 732 01c9 3D       		.byte	0x3d
 733 01ca A4040000 		.4byte	0x4a4
 734 01ce 02       		.uleb128 0x2
 735 01cf 91       		.byte	0x91
 736 01d0 64       		.sleb128 -28
 737 01d1 0C       		.uleb128 0xc
 738 01d2 31030000 		.4byte	.LASF32
 739 01d6 01       		.byte	0x1
 740 01d7 3E       		.byte	0x3e
 741 01d8 88000000 		.4byte	0x88
 742 01dc 42000000 		.4byte	.LLST1
 743 01e0 0D       		.uleb128 0xd
 744 01e1 09050000 		.4byte	.LASF33
 745 01e5 01       		.byte	0x1
 746 01e6 3F       		.byte	0x3f
 747 01e7 88000000 		.4byte	0x88
 748 01eb 01       		.uleb128 0x1
 749 01ec 54       		.byte	0x54
 750 01ed 0E       		.uleb128 0xe
 751 01ee 6E000000 		.4byte	.LBB7
 752 01f2 80010000 		.4byte	.LBE7-.LBB7
 753 01f6 AC030000 		.4byte	0x3ac
 754 01fa 0C       		.uleb128 0xc
 755 01fb 0D000000 		.4byte	.LASF34
 756 01ff 01       		.byte	0x1
 757 0200 6C       		.byte	0x6c
 758 0201 88000000 		.4byte	0x88
 759 0205 55000000 		.4byte	.LLST2
 760 0209 0C       		.uleb128 0xc
 761 020a AC040000 		.4byte	.LASF35
 762 020e 01       		.byte	0x1
 763 020f 70       		.byte	0x70
 764 0210 93000000 		.4byte	0x93
 765 0214 68000000 		.4byte	.LLST3
 766 0218 0F       		.uleb128 0xf
 767 0219 15010000 		.4byte	0x115
 768 021d 3E010000 		.4byte	.LBB8
 769 0221 02000000 		.4byte	.LBE8-.LBB8
 770 0225 01       		.byte	0x1
 771 0226 80       		.byte	0x80
 772 0227 0F       		.uleb128 0xf
 773 0228 1E010000 		.4byte	0x11e
 774 022c 80010000 		.4byte	.LBB10
 775 0230 02000000 		.4byte	.LBE10-.LBB10
 776 0234 01       		.byte	0x1
 777 0235 94       		.byte	0x94
 778 0236 10       		.uleb128 0x10
 779 0237 76000000 		.4byte	.LVL32
 780 023b 17050000 		.4byte	0x517
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 24


 781 023f 49020000 		.4byte	0x249
 782 0243 11       		.uleb128 0x11
 783 0244 01       		.uleb128 0x1
 784 0245 50       		.byte	0x50
 785 0246 01       		.uleb128 0x1
 786 0247 30       		.byte	0x30
 787 0248 00       		.byte	0
 788 0249 10       		.uleb128 0x10
 789 024a 80000000 		.4byte	.LVL34
 790 024e 17050000 		.4byte	0x517
 791 0252 5D020000 		.4byte	0x25d
 792 0256 11       		.uleb128 0x11
 793 0257 01       		.uleb128 0x1
 794 0258 50       		.byte	0x50
 795 0259 02       		.uleb128 0x2
 796 025a 09       		.byte	0x9
 797 025b FF       		.byte	0xff
 798 025c 00       		.byte	0
 799 025d 0A       		.uleb128 0xa
 800 025e 86000000 		.4byte	.LVL36
 801 0262 28050000 		.4byte	0x528
 802 0266 10       		.uleb128 0x10
 803 0267 98000000 		.4byte	.LVL39
 804 026b 33050000 		.4byte	0x533
 805 026f 79020000 		.4byte	0x279
 806 0273 11       		.uleb128 0x11
 807 0274 01       		.uleb128 0x1
 808 0275 50       		.byte	0x50
 809 0276 01       		.uleb128 0x1
 810 0277 30       		.byte	0x30
 811 0278 00       		.byte	0
 812 0279 0A       		.uleb128 0xa
 813 027a 9C000000 		.4byte	.LVL40
 814 027e 48050000 		.4byte	0x548
 815 0282 10       		.uleb128 0x10
 816 0283 A4000000 		.4byte	.LVL41
 817 0287 33050000 		.4byte	0x533
 818 028b 97020000 		.4byte	0x297
 819 028f 11       		.uleb128 0x11
 820 0290 01       		.uleb128 0x1
 821 0291 50       		.byte	0x50
 822 0292 03       		.uleb128 0x3
 823 0293 91       		.byte	0x91
 824 0294 64       		.sleb128 -28
 825 0295 06       		.byte	0x6
 826 0296 00       		.byte	0
 827 0297 0A       		.uleb128 0xa
 828 0298 A8000000 		.4byte	.LVL42
 829 029c 48050000 		.4byte	0x548
 830 02a0 10       		.uleb128 0x10
 831 02a1 BE000000 		.4byte	.LVL45
 832 02a5 33050000 		.4byte	0x533
 833 02a9 B3020000 		.4byte	0x2b3
 834 02ad 11       		.uleb128 0x11
 835 02ae 01       		.uleb128 0x1
 836 02af 50       		.byte	0x50
 837 02b0 01       		.uleb128 0x1
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 25


 838 02b1 32       		.byte	0x32
 839 02b2 00       		.byte	0
 840 02b3 0A       		.uleb128 0xa
 841 02b4 C2000000 		.4byte	.LVL46
 842 02b8 48050000 		.4byte	0x548
 843 02bc 10       		.uleb128 0x10
 844 02bd D8000000 		.4byte	.LVL49
 845 02c1 33050000 		.4byte	0x533
 846 02c5 CF020000 		.4byte	0x2cf
 847 02c9 11       		.uleb128 0x11
 848 02ca 01       		.uleb128 0x1
 849 02cb 50       		.byte	0x50
 850 02cc 01       		.uleb128 0x1
 851 02cd 33       		.byte	0x33
 852 02ce 00       		.byte	0
 853 02cf 0A       		.uleb128 0xa
 854 02d0 DC000000 		.4byte	.LVL50
 855 02d4 48050000 		.4byte	0x548
 856 02d8 10       		.uleb128 0x10
 857 02d9 08010000 		.4byte	.LVL56
 858 02dd 5D050000 		.4byte	0x55d
 859 02e1 FA020000 		.4byte	0x2fa
 860 02e5 11       		.uleb128 0x11
 861 02e6 06       		.uleb128 0x6
 862 02e7 50       		.byte	0x50
 863 02e8 93       		.byte	0x93
 864 02e9 04       		.uleb128 0x4
 865 02ea 51       		.byte	0x51
 866 02eb 93       		.byte	0x93
 867 02ec 04       		.uleb128 0x4
 868 02ed 0B       		.uleb128 0xb
 869 02ee F4       		.byte	0xf4
 870 02ef 25       		.uleb128 0x25
 871 02f0 08       		.byte	0x8
 872 02f1 99C8C092 		.4byte	0x92c0c899
 873 02f5 8FF3F03F 		.4byte	0x3ff0f38f
 874 02f9 00       		.byte	0
 875 02fa 0A       		.uleb128 0xa
 876 02fb 56010000 		.4byte	.LVL64
 877 02ff ED040000 		.4byte	0x4ed
 878 0303 0A       		.uleb128 0xa
 879 0304 5A010000 		.4byte	.LVL65
 880 0308 F4040000 		.4byte	0x4f4
 881 030c 0A       		.uleb128 0xa
 882 030d 74010000 		.4byte	.LVL69
 883 0311 FF040000 		.4byte	0x4ff
 884 0315 0A       		.uleb128 0xa
 885 0316 7C010000 		.4byte	.LVL70
 886 031a 77050000 		.4byte	0x577
 887 031e 0A       		.uleb128 0xa
 888 031f 80010000 		.4byte	.LVL71
 889 0323 10050000 		.4byte	0x510
 890 0327 10       		.uleb128 0x10
 891 0328 90010000 		.4byte	.LVL72
 892 032c 88050000 		.4byte	0x588
 893 0330 3A030000 		.4byte	0x33a
 894 0334 11       		.uleb128 0x11
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 26


 895 0335 01       		.uleb128 0x1
 896 0336 50       		.byte	0x50
 897 0337 01       		.uleb128 0x1
 898 0338 38       		.byte	0x38
 899 0339 00       		.byte	0
 900 033a 10       		.uleb128 0x10
 901 033b 96010000 		.4byte	.LVL73
 902 033f 99050000 		.4byte	0x599
 903 0343 4D030000 		.4byte	0x34d
 904 0347 11       		.uleb128 0x11
 905 0348 01       		.uleb128 0x1
 906 0349 50       		.byte	0x50
 907 034a 01       		.uleb128 0x1
 908 034b 38       		.byte	0x38
 909 034c 00       		.byte	0
 910 034d 10       		.uleb128 0x10
 911 034e AA010000 		.4byte	.LVL76
 912 0352 88050000 		.4byte	0x588
 913 0356 60030000 		.4byte	0x360
 914 035a 11       		.uleb128 0x11
 915 035b 01       		.uleb128 0x1
 916 035c 50       		.byte	0x50
 917 035d 01       		.uleb128 0x1
 918 035e 34       		.byte	0x34
 919 035f 00       		.byte	0
 920 0360 10       		.uleb128 0x10
 921 0361 B0010000 		.4byte	.LVL77
 922 0365 99050000 		.4byte	0x599
 923 0369 73030000 		.4byte	0x373
 924 036d 11       		.uleb128 0x11
 925 036e 01       		.uleb128 0x1
 926 036f 50       		.byte	0x50
 927 0370 01       		.uleb128 0x1
 928 0371 34       		.byte	0x34
 929 0372 00       		.byte	0
 930 0373 10       		.uleb128 0x10
 931 0374 BE010000 		.4byte	.LVL80
 932 0378 88050000 		.4byte	0x588
 933 037c 86030000 		.4byte	0x386
 934 0380 11       		.uleb128 0x11
 935 0381 01       		.uleb128 0x1
 936 0382 50       		.byte	0x50
 937 0383 01       		.uleb128 0x1
 938 0384 30       		.byte	0x30
 939 0385 00       		.byte	0
 940 0386 10       		.uleb128 0x10
 941 0387 C4010000 		.4byte	.LVL81
 942 038b 99050000 		.4byte	0x599
 943 038f 99030000 		.4byte	0x399
 944 0393 11       		.uleb128 0x11
 945 0394 01       		.uleb128 0x1
 946 0395 50       		.byte	0x50
 947 0396 01       		.uleb128 0x1
 948 0397 30       		.byte	0x30
 949 0398 00       		.byte	0
 950 0399 0A       		.uleb128 0xa
 951 039a DC010000 		.4byte	.LVL83
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 27


 952 039e AA050000 		.4byte	0x5aa
 953 03a2 0A       		.uleb128 0xa
 954 03a3 EE010000 		.4byte	.LVL84
 955 03a7 BB050000 		.4byte	0x5bb
 956 03ab 00       		.byte	0
 957 03ac 0A       		.uleb128 0xa
 958 03ad 10000000 		.4byte	.LVL9
 959 03b1 10050000 		.4byte	0x510
 960 03b5 0A       		.uleb128 0xa
 961 03b6 14000000 		.4byte	.LVL10
 962 03ba CC050000 		.4byte	0x5cc
 963 03be 0A       		.uleb128 0xa
 964 03bf 18000000 		.4byte	.LVL11
 965 03c3 D3050000 		.4byte	0x5d3
 966 03c7 10       		.uleb128 0x10
 967 03c8 1E000000 		.4byte	.LVL12
 968 03cc AA050000 		.4byte	0x5aa
 969 03d0 DB030000 		.4byte	0x3db
 970 03d4 11       		.uleb128 0x11
 971 03d5 01       		.uleb128 0x1
 972 03d6 50       		.byte	0x50
 973 03d7 02       		.uleb128 0x2
 974 03d8 09       		.byte	0x9
 975 03d9 FF       		.byte	0xff
 976 03da 00       		.byte	0
 977 03db 0A       		.uleb128 0xa
 978 03dc 22000000 		.4byte	.LVL13
 979 03e0 DA050000 		.4byte	0x5da
 980 03e4 10       		.uleb128 0x10
 981 03e5 28000000 		.4byte	.LVL14
 982 03e9 BB050000 		.4byte	0x5bb
 983 03ed F8030000 		.4byte	0x3f8
 984 03f1 11       		.uleb128 0x11
 985 03f2 01       		.uleb128 0x1
 986 03f3 50       		.byte	0x50
 987 03f4 02       		.uleb128 0x2
 988 03f5 09       		.byte	0x9
 989 03f6 FF       		.byte	0xff
 990 03f7 00       		.byte	0
 991 03f8 0A       		.uleb128 0xa
 992 03f9 2C000000 		.4byte	.LVL15
 993 03fd E1050000 		.4byte	0x5e1
 994 0401 0A       		.uleb128 0xa
 995 0402 30000000 		.4byte	.LVL16
 996 0406 E8050000 		.4byte	0x5e8
 997 040a 10       		.uleb128 0x10
 998 040b 38000000 		.4byte	.LVL17
 999 040f 77050000 		.4byte	0x577
 1000 0413 1F040000 		.4byte	0x41f
 1001 0417 11       		.uleb128 0x11
 1002 0418 01       		.uleb128 0x1
 1003 0419 50       		.byte	0x50
 1004 041a 03       		.uleb128 0x3
 1005 041b 0A       		.byte	0xa
 1006 041c A08C     		.2byte	0x8ca0
 1007 041e 00       		.byte	0
 1008 041f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 28


 1009 0420 3C000000 		.4byte	.LVL18
 1010 0424 EF050000 		.4byte	0x5ef
 1011 0428 0A       		.uleb128 0xa
 1012 0429 40000000 		.4byte	.LVL19
 1013 042d F6050000 		.4byte	0x5f6
 1014 0431 0A       		.uleb128 0xa
 1015 0432 44000000 		.4byte	.LVL20
 1016 0436 FD050000 		.4byte	0x5fd
 1017 043a 0A       		.uleb128 0xa
 1018 043b 48000000 		.4byte	.LVL21
 1019 043f 04060000 		.4byte	0x604
 1020 0443 0A       		.uleb128 0xa
 1021 0444 4C000000 		.4byte	.LVL22
 1022 0448 0B060000 		.4byte	0x60b
 1023 044c 0A       		.uleb128 0xa
 1024 044d 50000000 		.4byte	.LVL23
 1025 0451 12060000 		.4byte	0x612
 1026 0455 0A       		.uleb128 0xa
 1027 0456 54000000 		.4byte	.LVL24
 1028 045a 19060000 		.4byte	0x619
 1029 045e 0A       		.uleb128 0xa
 1030 045f 58000000 		.4byte	.LVL25
 1031 0463 20060000 		.4byte	0x620
 1032 0467 0A       		.uleb128 0xa
 1033 0468 5C000000 		.4byte	.LVL26
 1034 046c 27060000 		.4byte	0x627
 1035 0470 0A       		.uleb128 0xa
 1036 0471 60000000 		.4byte	.LVL27
 1037 0475 2E060000 		.4byte	0x62e
 1038 0479 10       		.uleb128 0x10
 1039 047a 66000000 		.4byte	.LVL28
 1040 047e 35060000 		.4byte	0x635
 1041 0482 90040000 		.4byte	0x490
 1042 0486 11       		.uleb128 0x11
 1043 0487 01       		.uleb128 0x1
 1044 0488 50       		.byte	0x50
 1045 0489 05       		.uleb128 0x5
 1046 048a 03       		.byte	0x3
 1047 048b 00000000 		.4byte	SIGNCHANGE_PositiveInterrupt_Handler
 1048 048f 00       		.byte	0
 1049 0490 12       		.uleb128 0x12
 1050 0491 6C000000 		.4byte	.LVL29
 1051 0495 46060000 		.4byte	0x646
 1052 0499 11       		.uleb128 0x11
 1053 049a 01       		.uleb128 0x1
 1054 049b 50       		.byte	0x50
 1055 049c 05       		.uleb128 0x5
 1056 049d 03       		.byte	0x3
 1057 049e 00000000 		.4byte	SIGNCHANGE_NegativeInterrupt_Handler
 1058 04a2 00       		.byte	0
 1059 04a3 00       		.byte	0
 1060 04a4 13       		.uleb128 0x13
 1061 04a5 7A000000 		.4byte	0x7a
 1062 04a9 14       		.uleb128 0x14
 1063 04aa E6040000 		.4byte	.LASF36
 1064 04ae 06       		.byte	0x6
 1065 04af 5506     		.2byte	0x655
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 29


 1066 04b1 B5040000 		.4byte	0x4b5
 1067 04b5 13       		.uleb128 0x13
 1068 04b6 88000000 		.4byte	0x88
 1069 04ba 15       		.uleb128 0x15
 1070 04bb 48010000 		.4byte	.LASF37
 1071 04bf 01       		.byte	0x1
 1072 04c0 13       		.byte	0x13
 1073 04c1 7A000000 		.4byte	0x7a
 1074 04c5 05       		.uleb128 0x5
 1075 04c6 03       		.byte	0x3
 1076 04c7 00000000 		.4byte	dac_value
 1077 04cb 15       		.uleb128 0x15
 1078 04cc C9030000 		.4byte	.LASF38
 1079 04d0 01       		.byte	0x1
 1080 04d1 14       		.byte	0x14
 1081 04d2 93000000 		.4byte	0x93
 1082 04d6 05       		.uleb128 0x5
 1083 04d7 03       		.byte	0x3
 1084 04d8 00000000 		.4byte	count
 1085 04dc 15       		.uleb128 0x15
 1086 04dd A7030000 		.4byte	.LASF39
 1087 04e1 01       		.byte	0x1
 1088 04e2 15       		.byte	0x15
 1089 04e3 93000000 		.4byte	0x93
 1090 04e7 05       		.uleb128 0x5
 1091 04e8 03       		.byte	0x3
 1092 04e9 00000000 		.4byte	oldCount
 1093 04ed 16       		.uleb128 0x16
 1094 04ee 9C010000 		.4byte	.LASF40
 1095 04f2 07       		.byte	0x7
 1096 04f3 5B       		.byte	0x5b
 1097 04f4 17       		.uleb128 0x17
 1098 04f5 38030000 		.4byte	.LASF44
 1099 04f9 07       		.byte	0x7
 1100 04fa 69       		.byte	0x69
 1101 04fb B6000000 		.4byte	0xb6
 1102 04ff 18       		.uleb128 0x18
 1103 0500 B6040000 		.4byte	.LASF42
 1104 0504 07       		.byte	0x7
 1105 0505 6A       		.byte	0x6a
 1106 0506 10050000 		.4byte	0x510
 1107 050a 19       		.uleb128 0x19
 1108 050b B6000000 		.4byte	0xb6
 1109 050f 00       		.byte	0
 1110 0510 16       		.uleb128 0x16
 1111 0511 F3040000 		.4byte	.LASF41
 1112 0515 07       		.byte	0x7
 1113 0516 5A       		.byte	0x5a
 1114 0517 18       		.uleb128 0x18
 1115 0518 0A020000 		.4byte	.LASF43
 1116 051c 08       		.byte	0x8
 1117 051d 26       		.byte	0x26
 1118 051e 28050000 		.4byte	0x528
 1119 0522 19       		.uleb128 0x19
 1120 0523 9E000000 		.4byte	0x9e
 1121 0527 00       		.byte	0
 1122 0528 17       		.uleb128 0x17
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 30


 1123 0529 B0030000 		.4byte	.LASF45
 1124 052d 09       		.byte	0x9
 1125 052e 42       		.byte	0x42
 1126 052f CE000000 		.4byte	0xce
 1127 0533 1A       		.uleb128 0x1a
 1128 0534 14050000 		.4byte	.LASF46
 1129 0538 0A       		.byte	0xa
 1130 0539 35       		.byte	0x35
 1131 053a C2000000 		.4byte	0xc2
 1132 053e 48050000 		.4byte	0x548
 1133 0542 19       		.uleb128 0x19
 1134 0543 AA000000 		.4byte	0xaa
 1135 0547 00       		.byte	0
 1136 0548 1A       		.uleb128 0x1a
 1137 0549 52010000 		.4byte	.LASF47
 1138 054d 0A       		.byte	0xa
 1139 054e 3C       		.byte	0x3c
 1140 054f DA000000 		.4byte	0xda
 1141 0553 5D050000 		.4byte	0x55d
 1142 0557 19       		.uleb128 0x19
 1143 0558 C2000000 		.4byte	0xc2
 1144 055c 00       		.byte	0
 1145 055d 1B       		.uleb128 0x1b
 1146 055e 706F7700 		.ascii	"pow\000"
 1147 0562 13       		.byte	0x13
 1148 0563 85       		.byte	0x85
 1149 0564 25000000 		.4byte	0x25
 1150 0568 77050000 		.4byte	0x577
 1151 056c 19       		.uleb128 0x19
 1152 056d 25000000 		.4byte	0x25
 1153 0571 19       		.uleb128 0x19
 1154 0572 25000000 		.4byte	0x25
 1155 0576 00       		.byte	0
 1156 0577 18       		.uleb128 0x18
 1157 0578 27020000 		.4byte	.LASF48
 1158 057c 07       		.byte	0x7
 1159 057d 68       		.byte	0x68
 1160 057e 88050000 		.4byte	0x588
 1161 0582 19       		.uleb128 0x19
 1162 0583 B6000000 		.4byte	0xb6
 1163 0587 00       		.byte	0
 1164 0588 18       		.uleb128 0x18
 1165 0589 54030000 		.4byte	.LASF49
 1166 058d 0B       		.byte	0xb
 1167 058e 40       		.byte	0x40
 1168 058f 99050000 		.4byte	0x599
 1169 0593 19       		.uleb128 0x19
 1170 0594 9E000000 		.4byte	0x9e
 1171 0598 00       		.byte	0
 1172 0599 18       		.uleb128 0x18
 1173 059a 2A010000 		.4byte	.LASF50
 1174 059e 0C       		.byte	0xc
 1175 059f 40       		.byte	0x40
 1176 05a0 AA050000 		.4byte	0x5aa
 1177 05a4 19       		.uleb128 0x19
 1178 05a5 9E000000 		.4byte	0x9e
 1179 05a9 00       		.byte	0
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 31


 1180 05aa 18       		.uleb128 0x18
 1181 05ab 5E000000 		.4byte	.LASF51
 1182 05af 0B       		.byte	0xb
 1183 05b0 41       		.byte	0x41
 1184 05b1 BB050000 		.4byte	0x5bb
 1185 05b5 19       		.uleb128 0x19
 1186 05b6 9E000000 		.4byte	0x9e
 1187 05ba 00       		.byte	0
 1188 05bb 18       		.uleb128 0x18
 1189 05bc B6020000 		.4byte	.LASF52
 1190 05c0 0C       		.byte	0xc
 1191 05c1 41       		.byte	0x41
 1192 05c2 CC050000 		.4byte	0x5cc
 1193 05c6 19       		.uleb128 0x19
 1194 05c7 9E000000 		.4byte	0x9e
 1195 05cb 00       		.byte	0
 1196 05cc 16       		.uleb128 0x16
 1197 05cd E4020000 		.4byte	.LASF53
 1198 05d1 0B       		.byte	0xb
 1199 05d2 3C       		.byte	0x3c
 1200 05d3 16       		.uleb128 0x16
 1201 05d4 14000000 		.4byte	.LASF54
 1202 05d8 0D       		.byte	0xd
 1203 05d9 27       		.byte	0x27
 1204 05da 16       		.uleb128 0x16
 1205 05db 08010000 		.4byte	.LASF55
 1206 05df 0C       		.byte	0xc
 1207 05e0 3C       		.byte	0x3c
 1208 05e1 16       		.uleb128 0x16
 1209 05e2 D3040000 		.4byte	.LASF56
 1210 05e6 09       		.byte	0x9
 1211 05e7 3A       		.byte	0x3a
 1212 05e8 16       		.uleb128 0x16
 1213 05e9 9C020000 		.4byte	.LASF57
 1214 05ed 09       		.byte	0x9
 1215 05ee 3D       		.byte	0x3d
 1216 05ef 16       		.uleb128 0x16
 1217 05f0 BA010000 		.4byte	.LASF58
 1218 05f4 0E       		.byte	0xe
 1219 05f5 33       		.byte	0x33
 1220 05f6 16       		.uleb128 0x16
 1221 05f7 72000000 		.4byte	.LASF59
 1222 05fb 0E       		.byte	0xe
 1223 05fc 3B       		.byte	0x3b
 1224 05fd 16       		.uleb128 0x16
 1225 05fe D7010000 		.4byte	.LASF60
 1226 0602 0F       		.byte	0xf
 1227 0603 33       		.byte	0x33
 1228 0604 16       		.uleb128 0x16
 1229 0605 81030000 		.4byte	.LASF61
 1230 0609 0F       		.byte	0xf
 1231 060a 3B       		.byte	0x3b
 1232 060b 16       		.uleb128 0x16
 1233 060c 22000000 		.4byte	.LASF62
 1234 0610 10       		.byte	0x10
 1235 0611 3F       		.byte	0x3f
 1236 0612 16       		.uleb128 0x16
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 32


 1237 0613 D3020000 		.4byte	.LASF63
 1238 0617 10       		.byte	0x10
 1239 0618 46       		.byte	0x46
 1240 0619 16       		.uleb128 0x16
 1241 061a 52050000 		.4byte	.LASF64
 1242 061e 11       		.byte	0x11
 1243 061f 3F       		.byte	0x3f
 1244 0620 16       		.uleb128 0x16
 1245 0621 23030000 		.4byte	.LASF65
 1246 0625 11       		.byte	0x11
 1247 0626 46       		.byte	0x46
 1248 0627 16       		.uleb128 0x16
 1249 0628 89020000 		.4byte	.LASF66
 1250 062c 0A       		.byte	0xa
 1251 062d 31       		.byte	0x31
 1252 062e 16       		.uleb128 0x16
 1253 062f 6E010000 		.4byte	.LASF67
 1254 0633 0A       		.byte	0xa
 1255 0634 A1       		.byte	0xa1
 1256 0635 18       		.uleb128 0x18
 1257 0636 3A000000 		.4byte	.LASF68
 1258 063a 12       		.byte	0x12
 1259 063b 18       		.byte	0x18
 1260 063c 46060000 		.4byte	0x646
 1261 0640 19       		.uleb128 0x19
 1262 0641 F4000000 		.4byte	0xf4
 1263 0645 00       		.byte	0
 1264 0646 1C       		.uleb128 0x1c
 1265 0647 99000000 		.4byte	.LASF72
 1266 064b 14       		.byte	0x14
 1267 064c 18       		.byte	0x18
 1268 064d 19       		.uleb128 0x19
 1269 064e F4000000 		.4byte	0xf4
 1270 0652 00       		.byte	0
 1271 0653 00       		.byte	0
 1272              		.section	.debug_abbrev,"",%progbits
 1273              	.Ldebug_abbrev0:
 1274 0000 01       		.uleb128 0x1
 1275 0001 11       		.uleb128 0x11
 1276 0002 01       		.byte	0x1
 1277 0003 25       		.uleb128 0x25
 1278 0004 0E       		.uleb128 0xe
 1279 0005 13       		.uleb128 0x13
 1280 0006 0B       		.uleb128 0xb
 1281 0007 03       		.uleb128 0x3
 1282 0008 0E       		.uleb128 0xe
 1283 0009 1B       		.uleb128 0x1b
 1284 000a 0E       		.uleb128 0xe
 1285 000b 55       		.uleb128 0x55
 1286 000c 17       		.uleb128 0x17
 1287 000d 11       		.uleb128 0x11
 1288 000e 01       		.uleb128 0x1
 1289 000f 10       		.uleb128 0x10
 1290 0010 17       		.uleb128 0x17
 1291 0011 00       		.byte	0
 1292 0012 00       		.byte	0
 1293 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 33


 1294 0014 24       		.uleb128 0x24
 1295 0015 00       		.byte	0
 1296 0016 0B       		.uleb128 0xb
 1297 0017 0B       		.uleb128 0xb
 1298 0018 3E       		.uleb128 0x3e
 1299 0019 0B       		.uleb128 0xb
 1300 001a 03       		.uleb128 0x3
 1301 001b 0E       		.uleb128 0xe
 1302 001c 00       		.byte	0
 1303 001d 00       		.byte	0
 1304 001e 03       		.uleb128 0x3
 1305 001f 16       		.uleb128 0x16
 1306 0020 00       		.byte	0
 1307 0021 03       		.uleb128 0x3
 1308 0022 0E       		.uleb128 0xe
 1309 0023 3A       		.uleb128 0x3a
 1310 0024 0B       		.uleb128 0xb
 1311 0025 3B       		.uleb128 0x3b
 1312 0026 0B       		.uleb128 0xb
 1313 0027 49       		.uleb128 0x49
 1314 0028 13       		.uleb128 0x13
 1315 0029 00       		.byte	0
 1316 002a 00       		.byte	0
 1317 002b 04       		.uleb128 0x4
 1318 002c 24       		.uleb128 0x24
 1319 002d 00       		.byte	0
 1320 002e 0B       		.uleb128 0xb
 1321 002f 0B       		.uleb128 0xb
 1322 0030 3E       		.uleb128 0x3e
 1323 0031 0B       		.uleb128 0xb
 1324 0032 03       		.uleb128 0x3
 1325 0033 08       		.uleb128 0x8
 1326 0034 00       		.byte	0
 1327 0035 00       		.byte	0
 1328 0036 05       		.uleb128 0x5
 1329 0037 16       		.uleb128 0x16
 1330 0038 00       		.byte	0
 1331 0039 03       		.uleb128 0x3
 1332 003a 0E       		.uleb128 0xe
 1333 003b 3A       		.uleb128 0x3a
 1334 003c 0B       		.uleb128 0xb
 1335 003d 3B       		.uleb128 0x3b
 1336 003e 05       		.uleb128 0x5
 1337 003f 49       		.uleb128 0x49
 1338 0040 13       		.uleb128 0x13
 1339 0041 00       		.byte	0
 1340 0042 00       		.byte	0
 1341 0043 06       		.uleb128 0x6
 1342 0044 0F       		.uleb128 0xf
 1343 0045 00       		.byte	0
 1344 0046 0B       		.uleb128 0xb
 1345 0047 0B       		.uleb128 0xb
 1346 0048 49       		.uleb128 0x49
 1347 0049 13       		.uleb128 0x13
 1348 004a 00       		.byte	0
 1349 004b 00       		.byte	0
 1350 004c 07       		.uleb128 0x7
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 34


 1351 004d 15       		.uleb128 0x15
 1352 004e 00       		.byte	0
 1353 004f 27       		.uleb128 0x27
 1354 0050 19       		.uleb128 0x19
 1355 0051 00       		.byte	0
 1356 0052 00       		.byte	0
 1357 0053 08       		.uleb128 0x8
 1358 0054 2E       		.uleb128 0x2e
 1359 0055 00       		.byte	0
 1360 0056 03       		.uleb128 0x3
 1361 0057 0E       		.uleb128 0xe
 1362 0058 3A       		.uleb128 0x3a
 1363 0059 0B       		.uleb128 0xb
 1364 005a 3B       		.uleb128 0x3b
 1365 005b 05       		.uleb128 0x5
 1366 005c 27       		.uleb128 0x27
 1367 005d 19       		.uleb128 0x19
 1368 005e 20       		.uleb128 0x20
 1369 005f 0B       		.uleb128 0xb
 1370 0060 00       		.byte	0
 1371 0061 00       		.byte	0
 1372 0062 09       		.uleb128 0x9
 1373 0063 2E       		.uleb128 0x2e
 1374 0064 01       		.byte	0x1
 1375 0065 3F       		.uleb128 0x3f
 1376 0066 19       		.uleb128 0x19
 1377 0067 03       		.uleb128 0x3
 1378 0068 0E       		.uleb128 0xe
 1379 0069 3A       		.uleb128 0x3a
 1380 006a 0B       		.uleb128 0xb
 1381 006b 3B       		.uleb128 0x3b
 1382 006c 0B       		.uleb128 0xb
 1383 006d 27       		.uleb128 0x27
 1384 006e 19       		.uleb128 0x19
 1385 006f 11       		.uleb128 0x11
 1386 0070 01       		.uleb128 0x1
 1387 0071 12       		.uleb128 0x12
 1388 0072 06       		.uleb128 0x6
 1389 0073 40       		.uleb128 0x40
 1390 0074 18       		.uleb128 0x18
 1391 0075 9742     		.uleb128 0x2117
 1392 0077 19       		.uleb128 0x19
 1393 0078 01       		.uleb128 0x1
 1394 0079 13       		.uleb128 0x13
 1395 007a 00       		.byte	0
 1396 007b 00       		.byte	0
 1397 007c 0A       		.uleb128 0xa
 1398 007d 898201   		.uleb128 0x4109
 1399 0080 00       		.byte	0
 1400 0081 11       		.uleb128 0x11
 1401 0082 01       		.uleb128 0x1
 1402 0083 31       		.uleb128 0x31
 1403 0084 13       		.uleb128 0x13
 1404 0085 00       		.byte	0
 1405 0086 00       		.byte	0
 1406 0087 0B       		.uleb128 0xb
 1407 0088 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 35


 1408 0089 01       		.byte	0x1
 1409 008a 3F       		.uleb128 0x3f
 1410 008b 19       		.uleb128 0x19
 1411 008c 03       		.uleb128 0x3
 1412 008d 0E       		.uleb128 0xe
 1413 008e 3A       		.uleb128 0x3a
 1414 008f 0B       		.uleb128 0xb
 1415 0090 3B       		.uleb128 0x3b
 1416 0091 0B       		.uleb128 0xb
 1417 0092 49       		.uleb128 0x49
 1418 0093 13       		.uleb128 0x13
 1419 0094 11       		.uleb128 0x11
 1420 0095 01       		.uleb128 0x1
 1421 0096 12       		.uleb128 0x12
 1422 0097 06       		.uleb128 0x6
 1423 0098 40       		.uleb128 0x40
 1424 0099 18       		.uleb128 0x18
 1425 009a 9642     		.uleb128 0x2116
 1426 009c 19       		.uleb128 0x19
 1427 009d 01       		.uleb128 0x1
 1428 009e 13       		.uleb128 0x13
 1429 009f 00       		.byte	0
 1430 00a0 00       		.byte	0
 1431 00a1 0C       		.uleb128 0xc
 1432 00a2 34       		.uleb128 0x34
 1433 00a3 00       		.byte	0
 1434 00a4 03       		.uleb128 0x3
 1435 00a5 0E       		.uleb128 0xe
 1436 00a6 3A       		.uleb128 0x3a
 1437 00a7 0B       		.uleb128 0xb
 1438 00a8 3B       		.uleb128 0x3b
 1439 00a9 0B       		.uleb128 0xb
 1440 00aa 49       		.uleb128 0x49
 1441 00ab 13       		.uleb128 0x13
 1442 00ac 02       		.uleb128 0x2
 1443 00ad 17       		.uleb128 0x17
 1444 00ae 00       		.byte	0
 1445 00af 00       		.byte	0
 1446 00b0 0D       		.uleb128 0xd
 1447 00b1 34       		.uleb128 0x34
 1448 00b2 00       		.byte	0
 1449 00b3 03       		.uleb128 0x3
 1450 00b4 0E       		.uleb128 0xe
 1451 00b5 3A       		.uleb128 0x3a
 1452 00b6 0B       		.uleb128 0xb
 1453 00b7 3B       		.uleb128 0x3b
 1454 00b8 0B       		.uleb128 0xb
 1455 00b9 49       		.uleb128 0x49
 1456 00ba 13       		.uleb128 0x13
 1457 00bb 02       		.uleb128 0x2
 1458 00bc 18       		.uleb128 0x18
 1459 00bd 00       		.byte	0
 1460 00be 00       		.byte	0
 1461 00bf 0E       		.uleb128 0xe
 1462 00c0 0B       		.uleb128 0xb
 1463 00c1 01       		.byte	0x1
 1464 00c2 11       		.uleb128 0x11
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 36


 1465 00c3 01       		.uleb128 0x1
 1466 00c4 12       		.uleb128 0x12
 1467 00c5 06       		.uleb128 0x6
 1468 00c6 01       		.uleb128 0x1
 1469 00c7 13       		.uleb128 0x13
 1470 00c8 00       		.byte	0
 1471 00c9 00       		.byte	0
 1472 00ca 0F       		.uleb128 0xf
 1473 00cb 1D       		.uleb128 0x1d
 1474 00cc 00       		.byte	0
 1475 00cd 31       		.uleb128 0x31
 1476 00ce 13       		.uleb128 0x13
 1477 00cf 11       		.uleb128 0x11
 1478 00d0 01       		.uleb128 0x1
 1479 00d1 12       		.uleb128 0x12
 1480 00d2 06       		.uleb128 0x6
 1481 00d3 58       		.uleb128 0x58
 1482 00d4 0B       		.uleb128 0xb
 1483 00d5 59       		.uleb128 0x59
 1484 00d6 0B       		.uleb128 0xb
 1485 00d7 00       		.byte	0
 1486 00d8 00       		.byte	0
 1487 00d9 10       		.uleb128 0x10
 1488 00da 898201   		.uleb128 0x4109
 1489 00dd 01       		.byte	0x1
 1490 00de 11       		.uleb128 0x11
 1491 00df 01       		.uleb128 0x1
 1492 00e0 31       		.uleb128 0x31
 1493 00e1 13       		.uleb128 0x13
 1494 00e2 01       		.uleb128 0x1
 1495 00e3 13       		.uleb128 0x13
 1496 00e4 00       		.byte	0
 1497 00e5 00       		.byte	0
 1498 00e6 11       		.uleb128 0x11
 1499 00e7 8A8201   		.uleb128 0x410a
 1500 00ea 00       		.byte	0
 1501 00eb 02       		.uleb128 0x2
 1502 00ec 18       		.uleb128 0x18
 1503 00ed 9142     		.uleb128 0x2111
 1504 00ef 18       		.uleb128 0x18
 1505 00f0 00       		.byte	0
 1506 00f1 00       		.byte	0
 1507 00f2 12       		.uleb128 0x12
 1508 00f3 898201   		.uleb128 0x4109
 1509 00f6 01       		.byte	0x1
 1510 00f7 11       		.uleb128 0x11
 1511 00f8 01       		.uleb128 0x1
 1512 00f9 31       		.uleb128 0x31
 1513 00fa 13       		.uleb128 0x13
 1514 00fb 00       		.byte	0
 1515 00fc 00       		.byte	0
 1516 00fd 13       		.uleb128 0x13
 1517 00fe 35       		.uleb128 0x35
 1518 00ff 00       		.byte	0
 1519 0100 49       		.uleb128 0x49
 1520 0101 13       		.uleb128 0x13
 1521 0102 00       		.byte	0
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 37


 1522 0103 00       		.byte	0
 1523 0104 14       		.uleb128 0x14
 1524 0105 34       		.uleb128 0x34
 1525 0106 00       		.byte	0
 1526 0107 03       		.uleb128 0x3
 1527 0108 0E       		.uleb128 0xe
 1528 0109 3A       		.uleb128 0x3a
 1529 010a 0B       		.uleb128 0xb
 1530 010b 3B       		.uleb128 0x3b
 1531 010c 05       		.uleb128 0x5
 1532 010d 49       		.uleb128 0x49
 1533 010e 13       		.uleb128 0x13
 1534 010f 3F       		.uleb128 0x3f
 1535 0110 19       		.uleb128 0x19
 1536 0111 3C       		.uleb128 0x3c
 1537 0112 19       		.uleb128 0x19
 1538 0113 00       		.byte	0
 1539 0114 00       		.byte	0
 1540 0115 15       		.uleb128 0x15
 1541 0116 34       		.uleb128 0x34
 1542 0117 00       		.byte	0
 1543 0118 03       		.uleb128 0x3
 1544 0119 0E       		.uleb128 0xe
 1545 011a 3A       		.uleb128 0x3a
 1546 011b 0B       		.uleb128 0xb
 1547 011c 3B       		.uleb128 0x3b
 1548 011d 0B       		.uleb128 0xb
 1549 011e 49       		.uleb128 0x49
 1550 011f 13       		.uleb128 0x13
 1551 0120 3F       		.uleb128 0x3f
 1552 0121 19       		.uleb128 0x19
 1553 0122 02       		.uleb128 0x2
 1554 0123 18       		.uleb128 0x18
 1555 0124 00       		.byte	0
 1556 0125 00       		.byte	0
 1557 0126 16       		.uleb128 0x16
 1558 0127 2E       		.uleb128 0x2e
 1559 0128 00       		.byte	0
 1560 0129 3F       		.uleb128 0x3f
 1561 012a 19       		.uleb128 0x19
 1562 012b 03       		.uleb128 0x3
 1563 012c 0E       		.uleb128 0xe
 1564 012d 3A       		.uleb128 0x3a
 1565 012e 0B       		.uleb128 0xb
 1566 012f 3B       		.uleb128 0x3b
 1567 0130 0B       		.uleb128 0xb
 1568 0131 27       		.uleb128 0x27
 1569 0132 19       		.uleb128 0x19
 1570 0133 3C       		.uleb128 0x3c
 1571 0134 19       		.uleb128 0x19
 1572 0135 00       		.byte	0
 1573 0136 00       		.byte	0
 1574 0137 17       		.uleb128 0x17
 1575 0138 2E       		.uleb128 0x2e
 1576 0139 00       		.byte	0
 1577 013a 3F       		.uleb128 0x3f
 1578 013b 19       		.uleb128 0x19
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 38


 1579 013c 03       		.uleb128 0x3
 1580 013d 0E       		.uleb128 0xe
 1581 013e 3A       		.uleb128 0x3a
 1582 013f 0B       		.uleb128 0xb
 1583 0140 3B       		.uleb128 0x3b
 1584 0141 0B       		.uleb128 0xb
 1585 0142 27       		.uleb128 0x27
 1586 0143 19       		.uleb128 0x19
 1587 0144 49       		.uleb128 0x49
 1588 0145 13       		.uleb128 0x13
 1589 0146 3C       		.uleb128 0x3c
 1590 0147 19       		.uleb128 0x19
 1591 0148 00       		.byte	0
 1592 0149 00       		.byte	0
 1593 014a 18       		.uleb128 0x18
 1594 014b 2E       		.uleb128 0x2e
 1595 014c 01       		.byte	0x1
 1596 014d 3F       		.uleb128 0x3f
 1597 014e 19       		.uleb128 0x19
 1598 014f 03       		.uleb128 0x3
 1599 0150 0E       		.uleb128 0xe
 1600 0151 3A       		.uleb128 0x3a
 1601 0152 0B       		.uleb128 0xb
 1602 0153 3B       		.uleb128 0x3b
 1603 0154 0B       		.uleb128 0xb
 1604 0155 27       		.uleb128 0x27
 1605 0156 19       		.uleb128 0x19
 1606 0157 3C       		.uleb128 0x3c
 1607 0158 19       		.uleb128 0x19
 1608 0159 01       		.uleb128 0x1
 1609 015a 13       		.uleb128 0x13
 1610 015b 00       		.byte	0
 1611 015c 00       		.byte	0
 1612 015d 19       		.uleb128 0x19
 1613 015e 05       		.uleb128 0x5
 1614 015f 00       		.byte	0
 1615 0160 49       		.uleb128 0x49
 1616 0161 13       		.uleb128 0x13
 1617 0162 00       		.byte	0
 1618 0163 00       		.byte	0
 1619 0164 1A       		.uleb128 0x1a
 1620 0165 2E       		.uleb128 0x2e
 1621 0166 01       		.byte	0x1
 1622 0167 3F       		.uleb128 0x3f
 1623 0168 19       		.uleb128 0x19
 1624 0169 03       		.uleb128 0x3
 1625 016a 0E       		.uleb128 0xe
 1626 016b 3A       		.uleb128 0x3a
 1627 016c 0B       		.uleb128 0xb
 1628 016d 3B       		.uleb128 0x3b
 1629 016e 0B       		.uleb128 0xb
 1630 016f 27       		.uleb128 0x27
 1631 0170 19       		.uleb128 0x19
 1632 0171 49       		.uleb128 0x49
 1633 0172 13       		.uleb128 0x13
 1634 0173 3C       		.uleb128 0x3c
 1635 0174 19       		.uleb128 0x19
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 39


 1636 0175 01       		.uleb128 0x1
 1637 0176 13       		.uleb128 0x13
 1638 0177 00       		.byte	0
 1639 0178 00       		.byte	0
 1640 0179 1B       		.uleb128 0x1b
 1641 017a 2E       		.uleb128 0x2e
 1642 017b 01       		.byte	0x1
 1643 017c 3F       		.uleb128 0x3f
 1644 017d 19       		.uleb128 0x19
 1645 017e 03       		.uleb128 0x3
 1646 017f 08       		.uleb128 0x8
 1647 0180 3A       		.uleb128 0x3a
 1648 0181 0B       		.uleb128 0xb
 1649 0182 3B       		.uleb128 0x3b
 1650 0183 0B       		.uleb128 0xb
 1651 0184 27       		.uleb128 0x27
 1652 0185 19       		.uleb128 0x19
 1653 0186 49       		.uleb128 0x49
 1654 0187 13       		.uleb128 0x13
 1655 0188 3C       		.uleb128 0x3c
 1656 0189 19       		.uleb128 0x19
 1657 018a 01       		.uleb128 0x1
 1658 018b 13       		.uleb128 0x13
 1659 018c 00       		.byte	0
 1660 018d 00       		.byte	0
 1661 018e 1C       		.uleb128 0x1c
 1662 018f 2E       		.uleb128 0x2e
 1663 0190 01       		.byte	0x1
 1664 0191 3F       		.uleb128 0x3f
 1665 0192 19       		.uleb128 0x19
 1666 0193 03       		.uleb128 0x3
 1667 0194 0E       		.uleb128 0xe
 1668 0195 3A       		.uleb128 0x3a
 1669 0196 0B       		.uleb128 0xb
 1670 0197 3B       		.uleb128 0x3b
 1671 0198 0B       		.uleb128 0xb
 1672 0199 27       		.uleb128 0x27
 1673 019a 19       		.uleb128 0x19
 1674 019b 3C       		.uleb128 0x3c
 1675 019c 19       		.uleb128 0x19
 1676 019d 00       		.byte	0
 1677 019e 00       		.byte	0
 1678 019f 00       		.byte	0
 1679              		.section	.debug_loc,"",%progbits
 1680              	.Ldebug_loc0:
 1681              	.LLST0:
 1682 0000 06000000 		.4byte	.LVL8
 1683 0004 6E000000 		.4byte	.LVL30
 1684 0008 0200     		.2byte	0x2
 1685 000a 30       		.byte	0x30
 1686 000b 9F       		.byte	0x9f
 1687 000c 6E000000 		.4byte	.LVL30
 1688 0010 70000000 		.4byte	.LVL31
 1689 0014 0100     		.2byte	0x1
 1690 0016 56       		.byte	0x56
 1691 0017 70000000 		.4byte	.LVL31
 1692 001b 7A000000 		.4byte	.LVL33
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 40


 1693 001f 0200     		.2byte	0x2
 1694 0021 31       		.byte	0x31
 1695 0022 9F       		.byte	0x9f
 1696 0023 7A000000 		.4byte	.LVL33
 1697 0027 82000000 		.4byte	.LVL35
 1698 002b 0200     		.2byte	0x2
 1699 002d 30       		.byte	0x30
 1700 002e 9F       		.byte	0x9f
 1701 002f 82000000 		.4byte	.LVL35
 1702 0033 20020000 		.4byte	.LFE65
 1703 0037 0100     		.2byte	0x1
 1704 0039 56       		.byte	0x56
 1705 003a 00000000 		.4byte	0
 1706 003e 00000000 		.4byte	0
 1707              	.LLST1:
 1708 0042 5E010000 		.4byte	.LVL66
 1709 0046 73010000 		.4byte	.LVL69-1
 1710 004a 0100     		.2byte	0x1
 1711 004c 50       		.byte	0x50
 1712 004d 00000000 		.4byte	0
 1713 0051 00000000 		.4byte	0
 1714              	.LLST2:
 1715 0055 8C000000 		.4byte	.LVL37
 1716 0059 94000000 		.4byte	.LVL38
 1717 005d 0100     		.2byte	0x1
 1718 005f 50       		.byte	0x50
 1719 0060 00000000 		.4byte	0
 1720 0064 00000000 		.4byte	0
 1721              	.LLST3:
 1722 0068 2A010000 		.4byte	.LVL61
 1723 006c 3E010000 		.4byte	.LVL62
 1724 0070 0100     		.2byte	0x1
 1725 0072 50       		.byte	0x50
 1726 0073 3E010000 		.4byte	.LVL62
 1727 0077 98010000 		.4byte	.LVL74
 1728 007b 0100     		.2byte	0x1
 1729 007d 55       		.byte	0x55
 1730 007e 9E010000 		.4byte	.LVL75
 1731 0082 B2010000 		.4byte	.LVL78
 1732 0086 0100     		.2byte	0x1
 1733 0088 55       		.byte	0x55
 1734 0089 B8010000 		.4byte	.LVL79
 1735 008d C6010000 		.4byte	.LVL82
 1736 0091 0100     		.2byte	0x1
 1737 0093 55       		.byte	0x55
 1738 0094 00000000 		.4byte	0
 1739 0098 00000000 		.4byte	0
 1740              		.section	.debug_aranges,"",%progbits
 1741 0000 2C000000 		.4byte	0x2c
 1742 0004 0200     		.2byte	0x2
 1743 0006 00000000 		.4byte	.Ldebug_info0
 1744 000a 04       		.byte	0x4
 1745 000b 00       		.byte	0
 1746 000c 0000     		.2byte	0
 1747 000e 0000     		.2byte	0
 1748 0010 00000000 		.4byte	.LFB63
 1749 0014 20000000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 41


 1750 0018 00000000 		.4byte	.LFB64
 1751 001c 20000000 		.4byte	.LFE64-.LFB64
 1752 0020 00000000 		.4byte	.LFB65
 1753 0024 20020000 		.4byte	.LFE65-.LFB65
 1754 0028 00000000 		.4byte	0
 1755 002c 00000000 		.4byte	0
 1756              		.section	.debug_ranges,"",%progbits
 1757              	.Ldebug_ranges0:
 1758 0000 00000000 		.4byte	.LFB63
 1759 0004 20000000 		.4byte	.LFE63
 1760 0008 00000000 		.4byte	.LFB64
 1761 000c 20000000 		.4byte	.LFE64
 1762 0010 00000000 		.4byte	.LFB65
 1763 0014 20020000 		.4byte	.LFE65
 1764 0018 00000000 		.4byte	0
 1765 001c 00000000 		.4byte	0
 1766              		.section	.debug_line,"",%progbits
 1767              	.Ldebug_line0:
 1768 0000 0C030000 		.section	.debug_str,"MS",%progbits,1
 1768      02006C02 
 1768      00000201 
 1768      FB0E0D00 
 1768      01010101 
 1769              	.LASF31:
 1770 0000 6D794669 		.ascii	"myFixedValue\000"
 1770      78656456 
 1770      616C7565 
 1770      00
 1771              	.LASF34:
 1772 000d 72657375 		.ascii	"result\000"
 1772      6C7400
 1773              	.LASF54:
 1774 0014 436C6F63 		.ascii	"Clock_1_Start\000"
 1774      6B5F315F 
 1774      53746172 
 1774      7400
 1775              	.LASF62:
 1776 0022 4F534331 		.ascii	"OSC1_Comp_Start\000"
 1776      5F436F6D 
 1776      705F5374 
 1776      61727400 
 1777              	.LASF19:
 1778 0032 666C6F61 		.ascii	"float32\000"
 1778      74333200 
 1779              	.LASF68:
 1780 003a 4F534331 		.ascii	"OSC1_SIGNCHANGE_PositiveISR_StartEx\000"
 1780      5F534947 
 1780      4E434841 
 1780      4E47455F 
 1780      506F7369 
 1781              	.LASF51:
 1782 005e 4F534331 		.ascii	"OSC1_IDAC8_SetValue\000"
 1782      5F494441 
 1782      43385F53 
 1782      65745661 
 1782      6C756500 
 1783              	.LASF59:
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 42


 1784 0072 4F534331 		.ascii	"OSC1_Triangle_Follower_Enable\000"
 1784      5F547269 
 1784      616E676C 
 1784      655F466F 
 1784      6C6C6F77 
 1785              	.LASF23:
 1786 0090 73697A65 		.ascii	"sizetype\000"
 1786      74797065 
 1786      00
 1787              	.LASF72:
 1788 0099 4F534331 		.ascii	"OSC1_SIGNCHANGE_NegativeISR_StartEx\000"
 1788      5F534947 
 1788      4E434841 
 1788      4E47455F 
 1788      4E656761 
 1789              	.LASF29:
 1790 00bd 6D61696E 		.ascii	"main\000"
 1790      00
 1791              	.LASF24:
 1792 00c2 6C6F6E67 		.ascii	"long double\000"
 1792      20646F75 
 1792      626C6500 
 1793              	.LASF7:
 1794 00ce 5F5F7569 		.ascii	"__uint32_t\000"
 1794      6E743332 
 1794      5F7400
 1795              	.LASF28:
 1796 00d9 5349474E 		.ascii	"SIGNCHANGE_NegativeInterrupt_Handler\000"
 1796      4348414E 
 1796      47455F4E 
 1796      65676174 
 1796      69766549 
 1797              	.LASF3:
 1798 00fe 73686F72 		.ascii	"short int\000"
 1798      7420696E 
 1798      7400
 1799              	.LASF55:
 1800 0108 4F534331 		.ascii	"OSC1_IDAC8_SAW_Start\000"
 1800      5F494441 
 1800      43385F53 
 1800      41575F53 
 1800      74617274 
 1801              	.LASF15:
 1802 011d 75696E74 		.ascii	"uint16\000"
 1802      313600
 1803              	.LASF17:
 1804 0124 696E7431 		.ascii	"int16\000"
 1804      3600
 1805              	.LASF50:
 1806 012a 4F534331 		.ascii	"OSC1_IDAC8_SAW_SetRange\000"
 1806      5F494441 
 1806      43385F53 
 1806      41575F53 
 1806      65745261 
 1807              	.LASF14:
 1808 0142 75696E74 		.ascii	"uint8\000"
 1808      3800
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 43


 1809              	.LASF37:
 1810 0148 6461635F 		.ascii	"dac_value\000"
 1810      76616C75 
 1810      6500
 1811              	.LASF47:
 1812 0152 4F534331 		.ascii	"OSC1_ADC_SAR_CountsTo_Volts\000"
 1812      5F414443 
 1812      5F534152 
 1812      5F436F75 
 1812      6E747354 
 1813              	.LASF67:
 1814 016e 4F534331 		.ascii	"OSC1_ADC_SAR_StartConvert\000"
 1814      5F414443 
 1814      5F534152 
 1814      5F537461 
 1814      7274436F 
 1815              	.LASF20:
 1816 0188 666C6F61 		.ascii	"float\000"
 1816      7400
 1817              	.LASF9:
 1818 018e 6C6F6E67 		.ascii	"long long int\000"
 1818      206C6F6E 
 1818      6720696E 
 1818      7400
 1819              	.LASF40:
 1820 019c 4F534331 		.ascii	"OSC1_Freq_Timer_Stop\000"
 1820      5F467265 
 1820      715F5469 
 1820      6D65725F 
 1820      53746F70 
 1821              	.LASF5:
 1822 01b1 6C6F6E67 		.ascii	"long int\000"
 1822      20696E74 
 1822      00
 1823              	.LASF58:
 1824 01ba 4F534331 		.ascii	"OSC1_Triangle_Follower_Start\000"
 1824      5F547269 
 1824      616E676C 
 1824      655F466F 
 1824      6C6C6F77 
 1825              	.LASF60:
 1826 01d7 4F534331 		.ascii	"OSC1_Saw_Follower_Start\000"
 1826      5F536177 
 1826      5F466F6C 
 1826      6C6F7765 
 1826      725F5374 
 1827              	.LASF26:
 1828 01ef 5F5F656E 		.ascii	"__enable_irq\000"
 1828      61626C65 
 1828      5F697271 
 1828      00
 1829              	.LASF25:
 1830 01fc 5F5F6469 		.ascii	"__disable_irq\000"
 1830      7361626C 
 1830      655F6972 
 1830      7100
 1831              	.LASF43:
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 44


 1832 020a 74657374 		.ascii	"test_pin_Write\000"
 1832      5F70696E 
 1832      5F577269 
 1832      746500
 1833              	.LASF2:
 1834 0219 756E7369 		.ascii	"unsigned char\000"
 1834      676E6564 
 1834      20636861 
 1834      7200
 1835              	.LASF48:
 1836 0227 4F534331 		.ascii	"OSC1_Freq_Timer_WritePeriod\000"
 1836      5F467265 
 1836      715F5469 
 1836      6D65725F 
 1836      57726974 
 1837              	.LASF22:
 1838 0243 63796973 		.ascii	"cyisraddress\000"
 1838      72616464 
 1838      72657373 
 1838      00
 1839              	.LASF1:
 1840 0250 7369676E 		.ascii	"signed char\000"
 1840      65642063 
 1840      68617200 
 1841              	.LASF10:
 1842 025c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1842      206C6F6E 
 1842      6720756E 
 1842      7369676E 
 1842      65642069 
 1843              	.LASF13:
 1844 0273 75696E74 		.ascii	"uint32_t\000"
 1844      33325F74 
 1844      00
 1845              	.LASF11:
 1846 027c 756E7369 		.ascii	"unsigned int\000"
 1846      676E6564 
 1846      20696E74 
 1846      00
 1847              	.LASF66:
 1848 0289 4F534331 		.ascii	"OSC1_ADC_SAR_Start\000"
 1848      5F414443 
 1848      5F534152 
 1848      5F537461 
 1848      727400
 1849              	.LASF57:
 1850 029c 4144435F 		.ascii	"ADC_DelSig_1_StartConvert\000"
 1850      44656C53 
 1850      69675F31 
 1850      5F537461 
 1850      7274436F 
 1851              	.LASF52:
 1852 02b6 4F534331 		.ascii	"OSC1_IDAC8_SAW_SetValue\000"
 1852      5F494441 
 1852      43385F53 
 1852      41575F53 
 1852      65745661 
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 45


 1853              	.LASF21:
 1854 02ce 63686172 		.ascii	"char\000"
 1854      00
 1855              	.LASF63:
 1856 02d3 4F534331 		.ascii	"OSC1_Comp_Enable\000"
 1856      5F436F6D 
 1856      705F456E 
 1856      61626C65 
 1856      00
 1857              	.LASF53:
 1858 02e4 4F534331 		.ascii	"OSC1_IDAC8_Start\000"
 1858      5F494441 
 1858      43385F53 
 1858      74617274 
 1858      00
 1859              	.LASF12:
 1860 02f5 696E7433 		.ascii	"int32_t\000"
 1860      325F7400 
 1861              	.LASF6:
 1862 02fd 5F5F696E 		.ascii	"__int32_t\000"
 1862      7433325F 
 1862      7400
 1863              	.LASF4:
 1864 0307 73686F72 		.ascii	"short unsigned int\000"
 1864      7420756E 
 1864      7369676E 
 1864      65642069 
 1864      6E7400
 1865              	.LASF30:
 1866 031a 70696E53 		.ascii	"pinState\000"
 1866      74617465 
 1866      00
 1867              	.LASF65:
 1868 0323 436F6D70 		.ascii	"Comp_1_Enable\000"
 1868      5F315F45 
 1868      6E61626C 
 1868      6500
 1869              	.LASF32:
 1870 0331 6E657752 		.ascii	"newReg\000"
 1870      656700
 1871              	.LASF44:
 1872 0338 4F534331 		.ascii	"OSC1_Freq_Timer_ReadCounter\000"
 1872      5F467265 
 1872      715F5469 
 1872      6D65725F 
 1872      52656164 
 1873              	.LASF49:
 1874 0354 4F534331 		.ascii	"OSC1_IDAC8_SetRange\000"
 1874      5F494441 
 1874      43385F53 
 1874      65745261 
 1874      6E676500 
 1875              	.LASF16:
 1876 0368 75696E74 		.ascii	"uint32\000"
 1876      333200
 1877              	.LASF8:
 1878 036f 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 46


 1878      20756E73 
 1878      69676E65 
 1878      6420696E 
 1878      7400
 1879              	.LASF61:
 1880 0381 4F534331 		.ascii	"OSC1_Saw_Follower_Enable\000"
 1880      5F536177 
 1880      5F466F6C 
 1880      6C6F7765 
 1880      725F456E 
 1881              	.LASF18:
 1882 039a 696E7433 		.ascii	"int32\000"
 1882      3200
 1883              	.LASF0:
 1884 03a0 646F7562 		.ascii	"double\000"
 1884      6C6500
 1885              	.LASF39:
 1886 03a7 6F6C6443 		.ascii	"oldCount\000"
 1886      6F756E74 
 1886      00
 1887              	.LASF45:
 1888 03b0 4144435F 		.ascii	"ADC_DelSig_1_GetResult32\000"
 1888      44656C53 
 1888      69675F31 
 1888      5F476574 
 1888      52657375 
 1889              	.LASF38:
 1890 03c9 636F756E 		.ascii	"count\000"
 1890      7400
 1891              	.LASF70:
 1892 03cf 2E5C6D61 		.ascii	".\\main.c\000"
 1892      696E2E63 
 1892      00
 1893              	.LASF71:
 1894 03d8 433A5C55 		.ascii	"C:\\Users\\Rob\\Documents\\personal\\git\\Dual-PSoC"
 1894      73657273 
 1894      5C526F62 
 1894      5C446F63 
 1894      756D656E 
 1895 0405 2D44434F 		.ascii	"-DCO\\Dual-PSoC-DCO.cydsn\000"
 1895      5C447561 
 1895      6C2D5053 
 1895      6F432D44 
 1895      434F2E63 
 1896              	.LASF69:
 1897 041e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1897      4320342E 
 1897      392E3320 
 1897      32303135 
 1897      30333033 
 1898 0451 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1898      20726576 
 1898      6973696F 
 1898      6E203232 
 1898      31323230 
 1899 0484 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1899      66756E63 
ARM GAS  C:\Users\Rob\AppData\Local\Temp\ccyGXMRS.s 			page 47


 1899      74696F6E 
 1899      2D736563 
 1899      74696F6E 
 1900              	.LASF35:
 1901 04ac 66726571 		.ascii	"frequency\000"
 1901      75656E63 
 1901      7900
 1902              	.LASF42:
 1903 04b6 4F534331 		.ascii	"OSC1_Freq_Timer_WriteCounter\000"
 1903      5F467265 
 1903      715F5469 
 1903      6D65725F 
 1903      57726974 
 1904              	.LASF56:
 1905 04d3 4144435F 		.ascii	"ADC_DelSig_1_Start\000"
 1905      44656C53 
 1905      69675F31 
 1905      5F537461 
 1905      727400
 1906              	.LASF36:
 1907 04e6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1907      52784275 
 1907      66666572 
 1907      00
 1908              	.LASF41:
 1909 04f3 4F534331 		.ascii	"OSC1_Freq_Timer_Start\000"
 1909      5F467265 
 1909      715F5469 
 1909      6D65725F 
 1909      53746172 
 1910              	.LASF33:
 1911 0509 64656C74 		.ascii	"deltaCount\000"
 1911      61436F75 
 1911      6E7400
 1912              	.LASF46:
 1913 0514 4F534331 		.ascii	"OSC1_ADC_SAR_GetResult16\000"
 1913      5F414443 
 1913      5F534152 
 1913      5F476574 
 1913      52657375 
 1914              	.LASF27:
 1915 052d 5349474E 		.ascii	"SIGNCHANGE_PositiveInterrupt_Handler\000"
 1915      4348414E 
 1915      47455F50 
 1915      6F736974 
 1915      69766549 
 1916              	.LASF64:
 1917 0552 436F6D70 		.ascii	"Comp_1_Start\000"
 1917      5F315F53 
 1917      74617274 
 1917      00
 1918              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
